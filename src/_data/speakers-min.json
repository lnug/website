[
  {
    "title": "11 years of Node: Let’s have an honest conversation",
    "speaker": "addaleax",
    "body": "Node.js has been around for a long time now, and it’s worth looking at what went great, what went well, what didn’t go so well, and where we’ll go from here.\r\nHaving been a core contributor for a long time now, I’ll reflect on the processes around Node.js and the results we’re getting out of them, and try to have an honest conversation on where the community stands and how fresh new projects like deno will change the landscape of JS outside of the browser.\r\n\r\n---\r\n\r\nOver the last 4 years, Anna has been one of the most active contributors to Node.js core. She is fueled by a passion for Node.js and its community.\r\n\r\n[@addaleax](https://twitter.com/addaleax) on twitter, working at [NearForm](https://www.nearform.com/)\r\n\r\n",
    "date": "2020-05-27"
  },
  {
    "title": "Writing A CPU Intensive Node.js Server With Worker Threads API",
    "speaker": "tamartwe",
    "body": "Node.js provides the developer a system with single threaded event loop architecture, that provides non blocking I/O mechanism. This work great until we get to CPU intensive tasks. In this case, Node doesn’t perform up to mark. This has changed with the release of the worker threads in latest Node versions. We can use threads and write CPU intensive code in Node. This can make Node popular in many other fields of software development, starting from algorithms , AI , complicated computations and more. In this talk I will go over the concept, API and architecture of worker threads. I will show a demo of a Node server that implements CPU intensive task , to assist you to retain a cool new ability to you Node.js coding skills\r\n\r\n---\r\n\r\nI am a software manager and architect. In the past, I managed large development teams, and was a CTO of a start up of my own. I have a decade of software engineering experience in various technologies: Server side, big data, mobile, web technologies, and security. I am currently focusing on Node.js, and have a deep knowledge of Node.js server architecture and Node.js performance optimizations.\r\n\r\n[@SternTwena](https://twitter.com/SternTwena) on twitter\r\n\r\n",
    "date": "2020-05-27"
  },
  {
    "title": "How to write a DevOps friendly Node application",
    "speaker": "dgonzalez",
    "body": "DevOps is a necessity nowadays. It is not a job title itself but a set of practices, many of them spanning across development. It is extremely important that the applications that we write are adapted to run in a DevOps environment:\r\n- Monitoring\r\n- Process management\r\n- Log aggregation\r\nAre only few of the aspects to be considered when building a Node application in order to succeed on DevOps environments, specially containers and Kubernetes.\r\n\r\n---\r\n\r\nDavid Gonzalez is a DevOps Architect at NearForm, building systems at scale for our customers. He is also a Google Developer Expert on Kubernetes and avid coder. Author of three books around microservices and DevOps, he is always challenging the comfort zone of his day to day work finding new ways of delivering highly transactional systems.\r\n\r\n- Twitter: [@dagonzago](https://twitter.com/dagonzago)\r\n- [LinkedIn](https://www.linkedin.com/in/david-gonzalez-microservices/)\r\n- GitHub: [@dgonzalez](https://github.com/dgonzalez)\r\n",
    "date": "2020-05-27"
  },
  {
    "title": "How to develop a emergency website using Prisma2 ORM, NodeJS, NextJS and deploy it in heroku, and Zeit",
    "speaker": "arismarko",
    "body": "On those critical times, I took the chance to learn something new and tried to PRISMA 2, to create a small website, that shows where there are supplies [Bread, Pasta and ToiletRolls]. \r\n\r\nI will go through all the difficulties of developing the app as Prisma2 is still in development, and how to deploy the app in Heroku. \r\n\r\nFor the frontend I used NextJS that connects to a nodejs API (very simple) that uses the Prisma client. \r\n\r\nAris is a developer for a number of years in FullStack development and a servant of the London's community powering [CityJS](https://cityjsconf.org) and [JSMonthly](https://www.meetup.com/js-monthly/). ",
    "date": "2020-06-24"
  },
  {
    "title": "Transactional emails at scale",
    "speaker": "tschoffelen",
    "body": "Almost all tech startups send out a bunch of emails to their users. Many of those will be based on certain triggers, like creating accounts, new posts, invoice creation, etc. Based on my experience building some companies and apps that rely heavily on transactional emails, I'd like to talk about how to manage and structure those.\r\n\r\n* Building and managing templates with involvement of stakeholders (marketing/partnerships team, designers, etc.)\r\n* My solution: Macaw ([repo](https://github.com/macaw-email/macaw) | [blog](https://schof.co/macaw)) - a Node.js toolset to streamline email sending and template management\r\n* Setting up an email sending flow in your serverless app\r\n* (optional - depending on time) Ensuring your emails arrive: your own IP address, SPF and DKIM, reply-to, etc.\r\n\r\n## Bio\r\n\r\nStarting my first tech company at age 16, I've co-founded several startups that focus on improving communication and helping small businesses, including [NearSt](https://near.st), which partners with Google to help local shops make their products searchable and [Infowijs](https://infowijs.nl), which helps Dutch high schools communicate better with their students, parents and teachers.\r\n\r\nI'm on Twitter as [@tschoffelen](https://twitter.com/tschoffelen).\r\n\r\n---\r\n\r\nI confirm my talk is 20 mins long in total.\r\nI confirm that I will abide by the Code of Conduct.",
    "date": "2020-03-25"
  },
  {
    "title": "Authentication && Serverless && Node",
    "speaker": "bernardbaker",
    "body": "Auth0 is a leading world class authentification platform. And I'd like to present it using Node and Serverless.\r\n\r\nRegular methods of authentication include setting up a custom authentification API, user, session and token management. Which is time consuming, not productive and plainly put, not very secure if a solution doesn't aspire to RFC specifications.\r\n\r\nIn my talk I will present to the audience; Auth0 as a solution, Netlify serverless functions, a Node API implementation of passwordless authentication, and basic API endpoint protection using JWT.\r\n\r\nI'm Bernard, I'm working for myself. An e-commerce startup. [@bernibear2000](https://twitter.com/bernibear2000).",
    "date": "2020-03-25"
  },
  {
    "title": "Migrating a simple study app to AWS",
    "speaker": "amdwit",
    "body": "I use a simple React PWA to keep my knowledge up to date. It first was running on a linux server using PostgreSQL and some NodeJS code. I will explain in twenty minutes how I migrated to AWS and I will show what NodeJS code I still use.\r\n\r\nI am a Javascript developer for over twenty years and I am currently looking for a full stack contract. I live in London since 2015 and I like visiting the Javascript community and their meetups.",
    "date": null
  },
  {
    "title": "Under-the-hood of web bundlers",
    "speaker": "craigtaub",
    "body": "A look at the mechanisms inside web bundlers e.g Webpack.\r\n\r\nStarting with why they are still useful.\r\n\r\nThen how to build a small compiler, akin to Webpack. There are many interesting topics in a very small space here.\r\n\r\nNext how to use the output of our compiler with an application.\r\n\r\nFinishing with all the additional parts Webpack does which ours doesn't, hopefully with some idea on how those could be done.\r\n\r\n## About me\r\nI'm a senior developer at Nested with over 10 years experience. We do dev team talks every week and I have taken a couple, usually on the \"under-the-hood of\" theme. I was previously at the BBC.\r\n\r\nMy medium page is [https://medium.com/@tabu_craig](https://medium.com/@tabu_craig), I enjoy blogging.",
    "date": "2020-06-24"
  },
  {
    "title": "⚡️Lightning talk - a practical guide for building an Alexa Skill. Coronavirus News.",
    "speaker": "iketari",
    "body": "There is a lot of noise about the Coronavirus for a few latest weeks.\r\nI've created a simple Alexa Skill which provides users with the latest update about the figures. Here it is https://www.amazon.co.uk/Artsiom-Mezin-Coronavirus-News/dp/B084M81B6Q\r\n\r\nHowever, it feels like there are tons of stuff that could be improved. \r\nI'd like to talk about the following things:\r\n\r\n1. How to design and implement an Alexa app for less than one weekend?\r\n2. What to expect from validation and rolling out processes?\r\n3. Where to get and how to store the data?\r\n4. How to automate the routine?\r\n5. How this sort of app can help people?\r\n6. What else could be done? \r\n7. **I am eager to collaborate!** \r\n\r\nGiven the fact that I'm doing this in a little rush, it feels more like **a lightning talk**.\r\n\r\n> About me: I am a Senior Frontend Engineer at Behavox. I have almost 10 years of experience in JavaScript development behind my back.\r\n> \r\n> You can find more about me on [LinkedIn](https://www.linkedin.com/in/artsiommezin/).\r\n\r\n- [x] I confirm my talk is 20 mins long in total.\r\n- [x] I confirm that I will abide by the Code of Conduct",
    "date": "2020-02-26"
  },
  {
    "title": "⚡️Bangle.js/ Nodewatch demo ⌚︎",
    "speaker": "admataz",
    "body": "> The world’s first hackable open source JavaScript-powered and TensorFlow-powered smartwatch\r\n\r\n[Nodewatch/ Bangle.js](https://nodewatch.dev)  was [introduced as the conference badge](https://www.nearform.com/blog/bangle-js-hackable-oss-js-and-tensorflow-smartwatch/) at Nodeconf EU in November. A [Kickstarter](https://www.kickstarter.com/projects/gfw/banglejs-the-hackable-smart-watch) that followed was swiftly funded. \r\n\r\nI received my watch from NearForm in the post the other day - and I don't know what to do with it yet - but this is too good not to share for a quick lightning demo. \r\n\r\nAdam aka [admataz](https://admataz.com) is a core LNUG organiser, a hacker, and a software developer at [NearForm](https://nearform.com) ",
    "date": "2020-01-22"
  },
  {
    "title": "LNUG 2020 retro buzz",
    "speaker": "admataz",
    "body": "Last year - while the rest of the world was losing its mind,  LNUG continued to grow its solid community of friends among professionals. We  saw major milestones for node.js  and we also hosted some great  talks  and events.\r\n\r\nIt’s 2020! \r\n\r\nThis year we want  to strengthen and grow - and support the communities and individuals  to continue to learn and create amazing work with node.js.  We want to  welcome visitors, out of town developers and guest speakers to add to our mix of local talent. \r\n\r\nIt’s 2020! \r\n\r\nSo we’re kicking off the decade with a fresh look back - and a new look forward.  What’s upcoming for node.js in 2020? And what are we going to do about it? \r\n\r\nThis is your chance to get involved - have a laugh and a look back with us, and have your say with what happens  next. \r\n",
    "date": "2020-01-22"
  },
  {
    "title": "QEWD-JSdb: It's a Database, Jim, but not as we know it!",
    "speaker": "robtweed",
    "body": "QEWD-JSdb is a new concept for databases in Node.js.  Although it's implemented on top of two incredibly fast, industrial-strength (though little-known) physical database technologies (the Open Source YottaDB and the proprietary IRIS databases), QEWD-JSdb abstracts their underlying hierarchical physical storage as on-disk JavaScript objects, blurring the boundary between what's in-memory and what's on-disk.  \r\n\r\nWith QEWD-JSdb, the database is no longer something that exists on another server, no longer effectively a separate technology that you access via a network connection using its in-built APIs, and which imposes on you a database model over which you have no control.  Let's face it: most mainstream databases are \"one trick ponies\" that model data in one particular way: fine if all your database requirements fit that model, but most likely you'll have circumstances that mean you either end up consuming valuable time fighting that model to fit your needs. or end up having to support multiple databases with all the resulting additional pain, aggravation and maintenance overhead.\r\n\r\nWith QEWD-JSdb, there's none of those restrictions and annoyances: your persistent data and its modelling is in your direct control within your Node.js processes!  As far as you're concerned, you're just dealing with JavaScript objects/JSON, but rather than being in-memory, they happen to be on-disk!\r\n\r\nBut you're not limited to persistent JSON: it's easy to model pretty much any type of database, both NoSQL and Relational/SQL on top of the basic persistent JSON data structures.  In fact, QEWD-JSdb comes with some already created for you to use and/or explore, including:\r\n\r\n- Redis-like Key/Value (actually Key/Object) store\r\n- Redis-like Lists\r\n- Document/JSON database storage\r\n- XML DOM database storage via the DOM API, with XPath querying\r\n- Relational with SQL read/write access\r\n\r\nOnce you're familiar with the basics of QEWD-JSdb, you can create your own custom database model if the built-in models don't meet your needs: no more time wasted fighting the database!\r\n\r\nIt's even possible to simultaneously apply different database models to the same physical QEWD-JSdb data!\r\n\r\nAll sounds too good to be true? Come and find out at Rob's talk on QEWD-JSdb.\r\n\r\n--- \r\n\r\nRob Tweed ([@rtweed](https://twitter.com/rtweed)) is a Director of M/Gateway Developments Ltd, and has been part of the LNUG scene since its earliest days - he was one of the speakers at its inaugural meeting, and has given a number of talks over the years, mainly focused on his Node.js-based QEWD technology/platform.  \r\n\r\nRob has several decades of experience, developing and advising on real-world complex, business-critical applications around the world, in sectors such as healthcare IT, financial services and retail systems.  He's specialised in database integration for Web and Internet technologies since the early days in the mid-90s, and has been immersed in Node.js since its earliest days in 2011!\r\n\r\nA keen proponent of Open Source software, you can find all his work (including QEWD-JSdb) at [@robtweed](https://github.com/robtweed)\r\n\r\n\r\n\r\n\r\n",
    "date": "2020-01-22"
  },
  {
    "title": "...and more ☈ ",
    "speaker": "admataz",
    "body": "Last month we had a blast with top notch lightning talks - and this month's planned full talk had to be delayed.\r\n\r\nSeems an obvious `1+1` that we should have more of a good thing - so this month....\r\n\r\n- Step aside chat ops, Bat Ops is the future. ([@star_suit](https://twitter.com/https://twitter.com/star_suit))\r\n- 100 player pong (or something like that) ([@admataz](https://twitter.com/admataz))\r\n- Rendering React Suspense on the server side ([@overlookmotel](https://github.com/overlookmotel))\r\n- Using Serverless to compile the Serverless ([@seanmtracey](https://twitter.com/seanmtracey))\r\n \r\nIf you want to join the list send in your ⚡️ idea as a comment [here](https://github.com/lnug/speakers/issues/179).  Same rules apply: Max 8 minutes. Whatever's getting you thinking about node and javascript. Go!",
    "date": "2019-11-27"
  },
  {
    "title": "⚡️Using Serverless to compile the Serverless.",
    "speaker": "seanmtracey",
    "body": "Compiling native dependencies for Serverless Node.js functions can be a PITA. In this lightning talk, I will explain how I put together an an OpenWhisk function which which makes compiling those dependencies as easy as making a single HTTP request.\r\n\r\n## About me\r\n\r\nI'm a Developer Advocate at IBM. I spend my time with AI, IoT, and Cloud Computing technologies - usually with Node.js (but sometimes with a smattering of Python), and I help run some meetup groups across the UK.",
    "date": "2019-11-27"
  },
  {
    "title": "The mergence of Graphql and Serverless",
    "speaker": "shadrech",
    "body": "In this talk we'll go over why these two technologies (Graphql & Serverless) have drastically gained popularity and what problems they were made to solve. Then we'll go through how the two can be used together and I'll do a little demo with the Serverless framework\r\n\r\nI've been a professional developer for about 3 years. In that time I've worked for small startups to large corporations. List includes Ruuby, Sky and Eurostar to name a few.\r\nTwitter handle is [@shadrech17](https://twitter.com/shadrech17)\r\n\r\nI confirm my talk will be 20 mins long 🤞🏾\r\n\r\nI will abide by the code of conduct ",
    "date": "2020-02-26"
  },
  {
    "title": "Open call for your lightning talk ⚡️ ⚡️ ",
    "speaker": "admataz",
    "body": "Tonight will be open mic for short-burst, quick-fire presentations. Maximum 8 minutes to talk about whatever is getting you thinking and acting with node and javascript. \r\n\r\nSo far we have: \r\n- Beth Griggs (@BethGriggs) : \"What's new to LTS with Node.js 12\"\r\n- Enrique Lacal (@EnriqueL8) : \"Simplify deploying cloud-native apps to Kubernetes\"\r\n- Lucas Fernandes da Costa (@lucasfcosta): \"How I’m Still not Using GUIs in 2019\"\r\n- Hew Ingram (@hewIngram ): \"A talk not at all about node...\" \r\n- Diogo (@diogofcunha): \"Async generators in real life\"\r\n\r\nAdd your lighting talk to the lineup in the comments on [here](https://github.com/lnug/speakers/issues/176) and get on the list! \r\n\r\n",
    "date": "2019-10-23"
  },
  {
    "title": "⚡️⚡️ Lightning talks",
    "speaker": "hewIngram",
    "body": "So... we haven't done lightning talks in a while. \r\n\r\nCalling all idealists and entrepreneurs, self-starters and enterprise team members... open source maintainers, experimenters, and those just having fun... we want to hear about what you are doing with node.js. \r\n\r\nIf it's worth your time developing, it's worth sharing. \r\n",
    "date": "2019-10-23"
  },
  {
    "title": "EsWhat now?",
    "speaker": "hewIngram",
    "body": "# Abstract \r\n\r\nSo ES6 is cool - we all know that, I've even seen job ads that are for ES6 developers (which is... interesting). But ES10 was released this year with basically zero excitement from anyone. What was in it? And why did nobody care? More importantly though... how can I try out cool new features that are destined for ES11, ES12 or beyond? How do I get my awesome idea into the Javascript spec? And why is it called ES10 and not JS10? While we're at it... what on earth is ECMAScript anyway?!\r\n\r\nThis talk will go over the process that Javascript features go through, it'll help to explain some of the weird history of Javascript and everyone will leave safe in the knowledge that when they have a great idea for the JS spec, they'll know exactly how to get it in.\r\n\r\n# About me\r\n\r\nI'm a software engineer at Applied - a startup striving to make hiring fairer, smarter and easier. I'm a lover of all things Javascript and spend far too much time building weird (read: pointless) things on the web.",
    "date": null
  },
  {
    "title": "Concurrent editing with JSON Patch and Operational Transformation",
    "speaker": "jasoniangreen",
    "body": "You often want to build an app as quickly as possible. To get some kind of MVP in the hands of users, giving them value and something for you to incrementally improve. Most features can come later, but if you ever intend to offer a shared editing experience of any kind, you really need to think about it up front.\r\n\r\nAt Threads Styling we were faced with such a prospect when planning their Social Story builder. Having worked with CMSs in the past, we knew the pain of managing document locks with all their edge cases. We also knew that eventually the use case will arise to concurrently edit the document, and if you haven’t planned for it, it is a monumental task.\r\n\r\nBy treating the document as a stream of JSON patch changes from the very beginning, we were able to offer real-time collaborative editing with conflict resolution smoothly handled by an Operational Transformation algorithm. In this talk, Jason will discuss the concepts involved and demonstrate a simple, but working example of a shared document using our open source library.\r\n\r\nBy Jason Green, Principal Developer at Threads Styling - Twitter: @aziraphael\r\n\r\nI confirm my talk is 20 mins long in total.\r\n\r\nI confirm that I will abide by the Code of Conduct",
    "date": "2019-09-25"
  },
  {
    "title": "Managing multiple npm modules in a single repo",
    "speaker": "knolleary",
    "body": "### Abstract\r\n\r\nEver since the start of [Node-RED](https://nodered.org), the runtime and editor components have been packaged together as a single blob of npm module.\r\n\r\nWith the 0.20 release we split the internals apart into 6 separate new npm modules, along with the original node-red module to glue it all back together - and we did it without end users ever knowing (apart from us talking about it at every chance we got).\r\n\r\nThis talk reveals how we went about this refactoring and the challenges of managing multiple modules in a single repo. I'll talk about why we ultimately decided not to use one of the various mono-repo tools, such as Lerna, and ultimately decided to roll our own approach.\r\n\r\n### About me\r\n\r\nI'm an Open Source developer at IBM and the creator of Node-RED.\r\nI can be found online as @knolleary in lots of the usual places.\r\n\r\nI presented about Node-RED at LNUG in its very early days of September 2013, not long after we'd first open sourced it.",
    "date": "2019-09-25"
  },
  {
    "title": "Security in Node.js",
    "speaker": "ForbesLindesay",
    "body": "While working on large node.js projects, I’ve noticed that there is no clear answer to common questions like “how do I securely store passwords”. I’ve also noticed that all the popular frameworks lack key security features such as CSRF protection and Rate Limiting by default. It’s really easy to get security wrong, and it’s not your fault that this is so difficult.\r\n\r\nIn this talk, I’ll present some practical steps you can take to secure your applications, including protecting against some of the most common attack vectors. I’ll also attempt to inspire you to think differently about what the defaults should be when you build new applications and libraries. We can make our code default to security; it doesn’t have to be this way.\r\n\r\nI'm a tech lead at Threads Styling and maintain several large open source projects, such as Pug, [@authentication](https://www.atauthentication.com/) and [@databases](https://www.atdatabases.org/). My twitter handle is @ForbesLindesay ",
    "date": "2019-08-28"
  },
  {
    "title": "Indie Hacking with Postgraphile",
    "speaker": "Ankcorn",
    "body": "Sometimes I get jealous of the speed people can build complex apps with things like laravel/rails. Node is a great run time but it is arguably a more complex choice for your tech stack, there is no standout MVC framework that does it all for you, instead, there are lots of small specialised tools. I want to talk about one of those. It’s called [Postgraphile](https://www.graphile.org/). It lets you generate a GraphQL API from a schema in a Postgres database. By writing just a little SQL you can create an application that would take a long time to create normally!\r\n\r\nI'm going to show you how you can use it to build a meetup.com clone complete with JWT based authentication, real-time meetup ratings, and role-based access control. \r\n\r\nI'm a senior software engineer at Near.st. We are building a real-time local inventory data platform to help small businesses fight back against the growth of online shopping. Outside of work, I'm chasing my life long dream of having a dog, and building silly things with javascript. [Follow me on twitter](https://twitter.com/thomasankcorn)",
    "date": "2019-08-28"
  },
  {
    "title": "Create your own state management library",
    "speaker": "jamesporter",
    "body": "## Abstract\r\n\r\nHow hard is it to make your own state management library? By using React hooks, Context and other open source projects you can easily build your own useful library.\r\n\r\nI wanted first class TypeScript support, immutable data, zero boilerplate and hassle free wiring. I built it in a few dozen lines of code: [Immutable Context](https://github.com/jamesporter/immutable-context).\r\n\r\nI'll demo how to use it via a [Code Sandbox demo](https://codesandbox.io/s/intelligent-kowalevski-6evy9?fontsize=14), how it works under the hood and then look at some lessons learned, with suggestions on how to build your own state management library in 2019.\r\n\r\n## About\r\n\r\nI'm a polyglot developer and data scientist. I've built lots of apps, for example this [iPhone app for Isometric graphics](https://isometrically.amimetic.co.uk). My website/blog is [www.amimetic.co.uk](https://www.amimetic.co.uk). I work with React/React Native at JPMorgan. My Twitter handle is @complexview",
    "date": "2019-07-24"
  },
  {
    "title": "How to build an advanced Admin Panel in Node.js and React using AdminBro",
    "speaker": "malgorzatagalinska",
    "body": "[How to build an advanced Admin Panel in Node.js and React using AdminBro]\r\n\r\n[Wojciech Krysiak, CTO in Software Brothers - software house specialized in building usable web and mobile applications for international Clients. Wojciech loves coding using the latest technologies: WebGL, HTML5, RoR, prediction.io, meteorjs and many more. He also supports his clients in IT, UX and Business Models.]\r\n\r\n",
    "date": null
  },
  {
    "title": "Using ML in NodeJS",
    "speaker": "Berkmann18",
    "body": "# Abstract\r\nAn overview of ML in JS and what I was able to do with it.\r\n\r\nHow and why would you use Machine Learning in NodeJS.\r\n\r\nI’ll go over some general concepts in ML and then dive into how I leveraged limdu and created a multi-label classifier (called ac-learn) and how you can do the same. All while seeing how fun and amazing it can be.\r\n\r\nThe talk would be focused on giving you the pointers and tools to solve problems where ML is usually the best solution as well as how you can hit the ground running.\r\n\r\n# About me\r\nI'm a Computer Science placement student working at BWC in Project Management, Web Dev and various other things (e.g. GDPR and IT support).\r\nI've been working with JS for about 7 years and with NodeJS for about 3 years and simply love almost everything about it.\r\n\r\nTwitter: @Berkmann18\r\n\r\n",
    "date": "2019-07-24"
  },
  {
    "title": "Robots and Food",
    "speaker": "onic",
    "body": "At Karakuri we build robots for the food industry. I would love to share a peek into our decentralised architecture and how the different robot components interact and communicate with each other. As the physical world is quite I/O heavy, Node.js (TypeScript) was a great choice as our main programming language/framework. \r\n\r\nhttps://www.linkedin.com/in/orfeonicolai/\r\nI'm a computer scientist with almost 20 years of industry experience. I have a double Masters degree in Innovation Design Engineering and am the course leader of the robotics course at the Imperial College Global Summer School. I work as Head of Software at Karakuri, a robotics startup. We just secured a seed funding round led by Ocado (https://techcrunch.com/2019/05/09/robotics-startups-wont-win-without-also-incorporating-ai-as-karakuris-fundraise-shows/?guccounter=1)\r\n",
    "date": "2019-06-26"
  },
  {
    "title": "Zero to prod in 2 hours",
    "speaker": "hewIngram",
    "body": "## Zero to prod in 2 hours\r\n\r\nWriting code is great, working out how to host it is less great (for most people!). We recently ran a workshop at CityJs and made sure that everyone walked out of that workshop with an app deployed. In this talk we’ll chat through some of the things that helped us do that (Netlify, serverless functions and Vue) as well as some alternatives (The Serverless framework + lambda etc, firebase and other SPA hosting). The aim? To get everyone to feel empowered to build something fun (and potentially silly).\r\n\r\n## About Us\r\n\r\nHew Ingram\r\nI’m a Full Stack engineer at Applied (a little startup striving to make hiring fairer, smarter and easier - driving forward diversity in companies). I predominantly use JS but dabble with bits of python, PHP and others. Lover of all things Javascript + a big fan of building cool (weird) things, often for the hell of it.\r\n\r\nThomas Ankcorn\r\nI'm a Software Engineer at BAE.  I like JavaScript , starting but not finishing side projects and cats. Often referred to as some dude with a scooter. \r\n",
    "date": "2019-05-22"
  },
  {
    "title": "Preoccupy the user's tab",
    "speaker": "iketari",
    "body": "Remote desktop apps are widely used. All of them work pretty much the same way: you can see the user's desktop and control their mouse and keyboard. And one of the main purposes of using them is providing support to users. Assuming you are not Microsoft or RedHat probably you are interested only in resolving issues which are related to that piece of software that had been delivered by you. E.g. your web application.\r\n\r\nBut what if you can't obligate your users to install additional software only for support purposes? Or they simply don't want to install anything.\r\n\r\nI'm going to talk about how to add a remote control functionality to your web apps using pure JavaScript and native browser APIs. \r\n\r\n_SPOILER: Even without using browser extensions!_\r\n\r\n> About me: I am a Senior Frontend Engineer at Behavox. I have almost 10 years of experience in JavaScript development behind my back. Originally I am from Minsk, Belarus. For now, working for a very promising AI company in London. And the topic of this talk is inspired by the real issue which we resolved recently.\r\n> \r\n> You can find more about me on [LinkedIn](https://www.linkedin.com/in/artsiommezin/).\r\n\r\n- [x] I confirm my talk is 20 mins long in total.\r\n- [x] I confirm that I will abide by the Code of Conduct",
    "date": "2019-06-26"
  },
  {
    "title": "Build your own WebAssembly Compiler ",
    "speaker": "ColinEberhardt",
    "body": "## Build your own WebAssembly Compiler \r\n\r\n> For more than 20 years JavaScript has been the only 'native' language of the web. That's all changed with the release of WebAssembly. In the coming years, you'll see people writing web apps in Rust, C#, C++ and all manner of other languages. But just what is WebAssembly? And what’s all the fuss about? WebAssembly is a low-level compilation target, which means that it is unlikely you’ll use it directly. However, as developers and hackers, we love to know how technology works! In this talk, Colin will look at some of the internals of WebAssembly, explore how it works ‘under the hood’, and look at how you can create your own (simple) compiler that targets this runtime.\r\n\r\nAbout me - \r\nI'm a technology enthusiast, working for a consultancy by day, and enjoying myself with open source by night. Here's [my blog](https://blog.scottlogic.com/ceberhardt/) if you want to find out more about me! I'm a keen WebAssembly enthusiast, I run [WebAssembly weekly](https://wasmweekly.news/) and did quite a few 'scene setting' talks on WebAssembly last year.\r\n\r\nFor this talk I want to do something different, delving into the details of what WebAssembly actually is, through the process of creating a compiler that targets WebAssembly.\r\n\r\nI'm actually giving this to at FullStack NYC in May, so would really love the opportunity to do this talk in April as a bit of a rehearsal. It will also help me avoid the usual, last-minute rush to get the talk finished!",
    "date": "2019-04-24"
  },
  {
    "title": "Native implementation of curl in node",
    "speaker": "Chinrank",
    "body": "# Abstract\r\nOver my last holiday I started a project I am quite enjoying. It is an implementation of the functionality of curl written done purely in node. It presently is nothing close to done, but you can do some basic curl stuff with it (e.g. make multipart form data posts to some url, pipe responses to files, handle http and https proxies (provided they support the connect header) to do requests over to http or https, recursively follow location headers, set headers, etc.). \r\n\r\nThere's presently some vague ftp ideas that are not at all done. \r\n\r\nThe rather bigger challenge I was working on last time I was doing my project was to establish an ssh connection, (which on account of doing everything from scratch will make a number of assumptions about the server it's connecting to).\r\n\r\nI'm hoping to over the next month or so get it all done nicely.\r\n\r\nOverall it's a pleasant way to learn some details of networking, starting to write an ssh client in particular requires manually writing the packets as per the ssh protocol which has been a reasonable education in how that sort of things works. It has also been good for me to appreicate how excellent node is, it really does seem to provide nice apis for everything you want.\r\n\r\n# About me\r\nI'm a former mathematician who over the last 9 or so months has turned programmer, I currently work as a developer mostly working with JavaScript. I mostly like doing algorithms and stuff and have only recently begun to learn the broader aspects of programming. I really love doing things from 'scratch' (in the sense of just using the stuff provided by the language) as I find it quite insightful.",
    "date": "2019-05-22"
  },
  {
    "title": "Bootstrapping a startup with SailsJS",
    "speaker": "SBirchall818",
    "body": "# Abstract\r\nOver the last 18 months I have bootstrapped my startup using SailsJS. What did I learn? What do you get out of the box? How has the project evolved? Am I happy with my choice 18 months later?\r\nI have previously used Rails, ASP.MVC and Laravell. I had decided on Node for the backend - but what framework would I choose? What do I really need? What can I trust? How does SailsJS differ to the aforementioned frameworks and how much bang can my buck get?\r\n\r\n\r\n## About  Me\r\nHi I'm Simon, physics graduate, software engineer, team lead and now technical co-founder of Kiffgo.com.\r\nAfter previously working at a consumer facing marketplace startup I teamed up with a motivated co-founder to create my own. As the technical co-founder I had some stack decisions to make. I arrived at Node + SailsJS. From webpack integration, unit testing to production deployment I've done it with SailsJS and am willing to share my experience. I've been to LNUG a number of times in the past and have always found it a friendly, welcoming and informative experience.",
    "date": "2019-04-24"
  },
  {
    "title": "Testing apps with third-party API integrations",
    "speaker": "mikesol",
    "body": "**Testing apps with third-party API integrations**\r\n\r\nIn this talk we will examine strategies and best practices to develop and test node apps that make heavy use of third-party API integrations. As reliance on third-party services becomes more and more prevalent in the node ecosystem, developers need cost-effective, secure, reliable and fast ways to mock these services for both dev/staging environments and testing.\r\n\r\nWe will start with looking at nock, and open-source mocking solution for local development, and move onto unmock which provides mocks-as-a-service of popular APIs.\r\n\r\nThe session will have live coding for both nock and unmock using express to create a simple microservice and jest for testing. It will also present several popular design patterns for isolating and testing third-party integrations as well as strategies for integration testing apps that rely on third-party APIs, including corner-case and error testing.\r\n\r\nPresenters will be myself (Mike Solomon - unmock.io) and I will invite some of our London-based clients to chime in about the importance of testing third-party integrations and the emerging ecosystem of developer sandbox environments for API testing.\r\n\r\nThis is the same talk that we are giving at SFNode (https://github.com/sfnode/sfnode/issues/98). We'd love to bring it to your community, share our learnings and hear your feedback.\r\n\r\n**Bio**\r\nMike Solomon is the founder and CEO of Meeshkan (meeshkan.com), a Helsinki-based DevOps company. A music major at Stanford University, Queen's University Belfast and the University of Florida, Mike has been a guest researcher at the University of Paris VI and has held the post of artistic director of the Ensemble 101 (ensemble101.fr) from 2011 until the present day. While working at the IRCAM as a computer music designer, he fell in love with Machine Learning and founded Meeshkan to ease several DevOps pain points in the ML pipeline. Since then, Meeshkan has expanded to other areas of DevOps, including API testing with unmock (unmock.io).",
    "date": "2019-03-27"
  },
  {
    "title": "TypeScript: It's time to migrate!",
    "speaker": "Talento90",
    "body": "TypeScript adoption it's been a reality in the last years. This presentation is going to be a demonstration on how we can take advantage of the TypeScript compiler to have a smooth migration from JavaScript to TypeScript.\r\n\r\nI am Marco, Software Engineer that believes software must be simple, intuitive and reliable. Currently working at Beamery. https://twitter.com/Talento90",
    "date": "2019-02-27"
  },
  {
    "title": "ECMAScript Modules: They're Coming...",
    "speaker": "trevorah",
    "body": "ECMAScript modules are just around the corner, but they may not be what you expect. I'll go into the reasoning behind the change and what it means for the future of javascript.\r\n\r\nI'm Andy, a full stack JS developer with a love of native apps. I'm a contractor @ DAZN and my twitter handle is `@trevorah_`.",
    "date": "2018-11-28"
  },
  {
    "title": "Building Cross Platform apps with Titanium",
    "speaker": "Topener",
    "body": "If you don’t want to learn a new language but still want to make a quality mobile app, then a cross platform tool like Titanium is what you’re looking for. In this talk you’ll be shown how easy it is to start building your app using skills you already know from web and NodeJS.\r\n\r\n**About me**\r\nRene Pot, Developer Evangelist at Axway Appcelerator since 2018. I've been developing since I was 12, full time cross-platform mobile developer since 2011. \r\n\r\nTwitter: [@Wraldpyk](https://twitter.com/wraldpyk)\r\n",
    "date": "2019-02-27"
  },
  {
    "title": "Async Iterators",
    "speaker": "jamiemccrindle",
    "body": "### Abstract\r\n\r\nAn exploration of async iterators in NodeJS including when and why to use them, how they compare to other reactive libraries, how they perform and what to look out for when you do use them.\r\n\r\n### About me\r\n\r\nJavaScript enthusiast, Open Source Contributor, Co-founder of a number of successful startups, OpenBankHack17 hackathon winner, Head of Technology for Business Banking at Investec. You can find me at [https://jamie.mccrindle.org](https://jamie.mccrindle.org)",
    "date": "2019-02-27"
  },
  {
    "title": "Web Assembly and the future of the Web",
    "speaker": "shakyShane",
    "body": "Over the years we've seen many attempts by developers to avoid writing Javascript\r\nat all costs - creating new languages that compile *into* JavaScript is still a common practice\r\nin many language communities.\r\n\r\nBut things are changing, for the better. We're reaching an age where potentially\r\nany high-level language will one day be able run in a browser, with greater speed\r\nand safety - all thanks to Web Assembly.\r\n\r\nThis talk will provide practical information about how you can take code written\r\nin a shiny new language like Rust, compile it to a Web Assembly module and then\r\nexecute it in the browser.\r\n\r\n",
    "date": "2019-01-23"
  },
  {
    "title": "Building and deploying Cloud Native Node.js applications",
    "speaker": "BethGriggs",
    "body": "The CloudNativeJS.io community project provides a number of assets, tools and core modules for building Cloud Native Node.js applications. This session will show users how to use those to easily take an existing application and deploy it to Kubernetes with full support for liveness checks, metrics and request tracking.\r\n\r\nBeth Griggs, Developer & Node.js Core Collaborator, IBM Runtimes ([@BethGriggs_](https://twitter.com/BethGriggs_) )\r\nNeeraj Laad, Developer, IBM Runtimes ([@NeerajLaad](https://twitter.com/NeerajLaad))",
    "date": "2018-10-24"
  },
  {
    "title": "Build APIs with node, Lambda & Serverless",
    "speaker": "errietta",
    "body": "AWS lambda allows you to build microservices that can be triggered both through HTTP and other ways such  as when something is added to a queue, or on a schedule. We'll show how it is possible to build an API which consists of small, individual functions that respond to different HTTP requests using AWS lambda and API gateway. In addition to this, we will be deploying using serverless within minutes!\r\n\r\n## About me\r\n\r\nPolyglot developer with a passion for learning new things.",
    "date": "2019-01-23"
  },
  {
    "title": "Large-scale refactoring with codemods",
    "speaker": "eddyerburgh",
    "body": "Refactoring is part of the process of maintaining an application, but large scale refactoring that are more complicated than a find and replace are time consuming. \r\n\r\nCodemods are a tool to refactor code by manipulating the abstract syntax tree (AST). In this talk I'll teach you what ASTs are, why we use ASTs in tools like Babel and eslint, and how to write a codemod that manipulates an AST.\r\n\r\n**About me**\r\nI'm a Vue core contributor, and software engineer at the BBC. https://twitter.com/EddYerburgh\r\n",
    "date": "2018-11-28"
  },
  {
    "title": "Intro to GraphQL",
    "speaker": "SomeHats",
    "body": "GraphQL is kind of a buzzword right now - but what even is this new API tech from Facebook? In this talk, we’ll take a look at GraphQL and understand what it is, why you might use it, and how it fits in with the existing API landscape. We’ll have a go at writing some simple GraphQL queries together, and hopefully you’ll go away excited about using this awesome tech in your own work & projects.\r\n\r\nAlex ([@somehats](https://twitter.com/somehats)) is a freelance full-stack designer, developer, and educator. When she’s not creating apps, games, and tools for the web, she’s teaching other people how to. Alex has been using GraphQL in production on a number of projects since early 2016, and is super excited about introducing more people to the tech. You can follow her on Twitter at [@somehats](https://twitter.com/somehats)",
    "date": "2018-09-26"
  },
  {
    "title": "A Journey with GraphQL in Production",
    "speaker": "msmichellegar",
    "body": "You've heard of GraphQL. But what kind of problems can it solve? This is the story of why we chose GraphQL to power the Vogue and GQ websites, and how it helped us get the data we needed for our frontend. You'll learn about some ways in which GraphQL can improve your application, and understand how you might implement it.\r\n\r\n**About the Speakers**\r\n\r\n[Faduma](https://twitter.com/FadumaFaralacag) and [Michelle](https://twitter.com/msmichellegar) are Software Engineers at Condé Nast International.",
    "date": "2018-09-26"
  },
  {
    "title": "Zero Knowledge Proofs in Node.js",
    "speaker": "framp",
    "body": "### Abstract\r\nZero Knowledge Proofs are one of cryptography's best hidden gems and they're behind recent advancements in privacy conscious crypto-currencies.\r\nWe're going to see how to use them in node.js and improve your applications' security, whether centralised or distributed.\r\n\r\n### About me\r\nFederico Rampazzo is a Software Entrepreneur and Engineer with a passion for Functional Programming, Cryptography and Payments (especially as in \"receiving payments\" - but also Payment System architectures).\r\nHe works for Tes, the biggest community of educators in the world and home to an excellent marketplace for teachers' resources.\r\n\r\n-----\r\n\r\nI abide to the Rule of Conduct and I will keep my talk under 20 minutes",
    "date": "2018-08-22"
  },
  {
    "title": "A New Way to Profile Node.js",
    "speaker": "davidmarkclements",
    "body": "## Abstract \r\nIt’s been weeks and the organisation you work for seems to be slowly turning against you. At least that’s what it feels like. User experience is poor because of slow API’s, sales are being missed, performance-linked SEO heuristics are causing a drop in page ranking. Mobile users have all but given up. Operations have reported that a critical Node.js service owned by your team is spinning at 70-100% CPU, and all parts of the application dependent on the service are experiencing intermittent slowdowns or in some cases, complete unavailability. What are you going to do now?\r\n\r\n## Speaker\r\nDavid Mark Clements is a Node.js performance specialist and author of Node Cookbook. He is currently serving as Principal Architect with nearForm. David has been coding, speaking and writing about Node.js since Node 0.4 and has worked with frontend JavaScript for 20 years. Of note among David’s open source contributions is Pino, the fastest Node.js logger available (co-authored with Matteo Collina) and 0x, a JavaScript stack profiling tool. David’s book about Node.js, the aforementioned Node Cookbook, is now in its third edition.",
    "date": "2018-08-22"
  },
  {
    "title": "GraphQL on the Edge ",
    "speaker": "sevki",
    "body": "# Abstract\r\n\r\nAn introduction to GraphQL on Serverless. We'll talk about the benefits of running GraphQL (and other API gateway patterns) on the Edge (the performance benefits batching and so on).\r\n\r\n# Speaker\r\n\r\nSevki Hasirci is a Systems engineer at Cloudflare, working on developer tools, his day to day responsibilities are making developers more productive.\r\n\r\n# Other\r\nI confirm my talk is 20 mins long in total.\r\nI confirm that I will abide by the Code of Conduct",
    "date": "2018-08-22"
  },
  {
    "title": "The JavaScript/JSON PostgreSQL masterclass!",
    "speaker": "forbesmyester",
    "body": "Using and abusing PostgreSQL to write less code\r\n\r\nHi thinking about doing a talk about using PostgreSQL's JSON features but combining obvious things like WHERE, less obvious things like GROUP, WINDOW, WITH and subqueries and perhaps going as far as developing your own AGGREGATE functions.\r\n\r\nI think, it is quite possible to swap vast swathes of code for advanced, but not unreadable SQL once you know where to look and what not to do, I would like to explore this idea.",
    "date": null
  },
  {
    "title": "Building and deploying Cloud Native Node.js applications",
    "speaker": "seabaylea",
    "body": "[Abstract of your talk]\r\nThe CloudNativeJS.io community project provides a number of assets, tools and core modules for building Cloud Native Node.js applications. This session will show use how to use those to easily take an existing application and deploy it to Kubernetes with full support for liveness checks, metrics and request tracking.\r\n\r\n[A bit about you, e.g. current job, twitter handle, etc.]\r\nChris Bailey, Chief Architect, Cloud Native Runtimes, IBM (@chris__bailey)\r\nBeth Griggs, Node.js Core Collaborator, IBM (@BethGriggs_ )\r\n\r\n\r\nThe [CloudNativeJS.io](http://cloudnativejs.io) community project was announced last week at the Node Summit. This would be a talk covering how to use those assets to enhance an existing Express.js app to add \"Cloud Native\" capabilities, and how to deploy it to Kubernetes.\r\n\r\nThis would be an ideal second talk to the one proposed under Issue #143, showing how you can update your dockerized application and deploy it.",
    "date": "2018-10-24"
  },
  {
    "title": "Building an Alexa Skill in 20 minutes using NodeJS",
    "speaker": "muttoni",
    "body": "Developers can build engaging voice experiences, aka Skills, for their services with the Alexa Skills Kit. In this 20 minute session, learn how to build a voice experience for Amazon Alexa: from idea to working skill including some best practices to consider along the way.\r\n\r\n**Personal Info:**\r\nTech Evangelist at Amazon, Twitter: [@muttonia](https://twitter.com/muttonia)\r\n",
    "date": "2018-10-24"
  },
  {
    "title": "Dockerizing JavaScript Applications",
    "speaker": "d4nyll",
    "body": "Docker is an ecosystem that allows you to work with containers. Whilst the initial learning curve can be steep, it can ultimately make your development and deployment cycles much faster.\r\n\r\nIn this talk, I will show you how to deploy a simple front- and back-end application using Docker, and show how much faster it is than the traditional, more manual approach.\r\n\r\n### Resources\r\n* You can try out the code yourself using the repository on [GitHub](https://github.com/d4nyll/docker-demo)\r\n* A variation of the presentation is also available on [Google Slides](https://docs.google.com/presentation/d/1ELRYLJI2Lgqk0zK0qQnVIYeZA2Nc0IG8jRaYRFr_TTM/)\r\n* A recording of the talk is available on [YouTube](https://www.youtube.com/watch?v=N5WKMVF_qlw)\r\n\r\n### About Me\r\nI am a JavaScript developer at [Nexmo](https://www.nexmo.com/). Before that, I ran my own digital agency, [Brew](http://www.brew.com.hk/), in Hong Kong, specializing in [Meteor](https://www.meteor.com/).",
    "date": "2018-10-24"
  },
  {
    "title": "Let's dip our toes in es6",
    "speaker": "errietta",
    "body": "A beginner's overview of new features in ES6. This talk goes through some of the newly introduced features in es6 with live coding examples.\r\n\r\nWe'll go over some of the features, for example:\r\n* Rest/spread\r\n* Destructuring\r\n* Arrow functions\r\n* Object literals\r\n* Constants\r\n\r\nI confirm my talk is 20 mins long in total.\r\nI confirm that I will abide by the Code of Conduct\r\n\r\n",
    "date": null
  },
  {
    "title": "http4js: a whirlwind tour",
    "speaker": "TomShacham",
    "body": "## Abstract\r\n\r\n[http4js](https://github.com/TomShacham/http4js) is a lightweight http framework. It's immutable, has zero dependencies and is written in typescript. The [docs](https://tomshacham.github.io/http4js/#intro) are quite descriptive.\r\n\r\nThis talk would be mainly live coding to show the main benefits of using http4js over another node http framework. I've presented to colleagues who are now adopting http4js. I'd love to show the community why I think it's a better way to write web apps, by demonstration! \r\n\r\nI will go through the main selling points: \r\n - in memory testing of your routing (no more slow end-to-end tests)\r\n - immutable Req/Res objects (so harder to smear state around your codebase)\r\n - a simple http client \r\n - zero dependencies\r\n - support for Koa/Express backends (so you can use your favourite middleware)\r\n - nice things that typescript brings (autocompleting, type safety, ... ) \r\n - symmetric client and server type signatures (Request => Promise\\<Response\\> , making proxying a cinch)\r\n\r\nThrough live coding and real examples I will show how simple and sane http4js can be!\r\n\r\n## About me\r\nI'm an Engineer at [Triptease](https://triptease.com/).",
    "date": "2018-06-27"
  },
  {
    "title": "Elm: your next programming language?",
    "speaker": "jamesporter",
    "body": "Maybe you have heard of Elm, the functional, front-end web language. But why would you as a full stack or backend Javascript developer learn this? Actually, it is the perfect first functional programming language (way friendlier than the others) and could change the way you think about programming Javascript. In particular you will better understand how and why to use TypeScript or Flow.\r\n\r\nThe talk comes in two parts. The first is a quick introduction to Elm via its REPL. We’ll take a look at a few of its key features and lightweight syntax. In the second part we will experience one of Elm’s superpowers: it makes making changes easy. We'll take an existing Elm App and add a new feature, letting the friendly compiler guide us to a working version.\r\n\r\nI'm a polyglot developer currently focusing on React and React Native projects, but I dabble in lots other things. For example I recently made Isometrically: an App for creating 3D-ish graphics, ideal for websites thanks to SVG export/tiny file sizes: https://isometrically.amimetic.co.uk\r\n\r\nI'm [@complexview](https://twitter.com/complexview) on Twitter.",
    "date": "2018-07-25"
  },
  {
    "title": "When you assume, you make an error out of you and me",
    "speaker": "gvonkoss",
    "body": "Our choices in wording are frequently more powerful than we realise, and we risk using this power liberally and erroneously. Let’s take a look at our ideas about how we communicate in our code and in our speech, and what effects those ideas have.\r\n\r\nMy name is Gabrielle von Koss, and I work as a developer at the Financial Times. You can find my retweeting activity on [@gvonkoss](https://twitter.com/gvonkoss)\r\n",
    "date": "2019-03-27"
  },
  {
    "title": "Managing cloud resources in a distributed and fault-tolerant manner with EVRYTHNG’s resource manager",
    "speaker": "stephendeyoung",
    "body": "At [EVRYTHNG](http://evrythng.com/) we had to a build a number of Node.js applications that required managing multiple resources in a distributed environment. For example, handling real-time connections to other clouds such as Nest and Honeywell and sending notifications to [IFTTT](https://ifttt.com/) applets. What if there was a library that handled the allocation and distribution of these resources so developers could focus on the core business logic of their application?\r\n\r\nThe EVRYTHNG distributed resource manager is a Node.js library that solves this problem. Developers don’t need to worry about maintaining real-time connections when new nodes are added to the system or if one of them goes down.\r\n\r\nIn this talk I would demonstrate the resource manager so attendees will see what problems it solves for us at EVRYTHNG. In addition, they will gain an understanding of how we use Node.js at our company and how it helps us scale. Please note that this library is not currently open source but it should be in the next 1-2 months.\r\n\r\nI work as a Technical Lead for EVRYTHNG who provide an IoT platform for businesses around the world. It’s my role to decide on the architecture for various parts of the platform and how we will build these components using Node.js. I’ve been programming in Node for five years.",
    "date": "2018-06-27"
  },
  {
    "title": "Objection.js, a SQL ORM",
    "speaker": "paulbjensen",
    "body": "Objection.js is a SQL ORM (Object Relational mapping) for Node.js.\r\n\r\nIn this talk, I will walk you through how the module works, show live examples of it in action, and present the case for considering it in your Node.js projects.\r\n\r\nThings that we'll cover are:\r\n\r\n- Quick setup\r\n- Creating the underlying database schema for your models via Knex.js\r\n- Creating models and executing SQL queries via the models\r\n- Implementing validation in your models with JSON schema\r\n- Defining relationships between models\r\n- Doing graph inserts and updates\r\n- Setting up a GraphQL API with the objection-graphql plugin\r\n- Other interesting objection.js plugins\r\n\r\nMy name is Paul Jensen, I'm the author of [Manning's \"Cross Platform Desktop Applications - Using Node, Electron, and NW.js\"](http://manning.com/books/cross-platform-desktop-applications). You can find me on [Twitter](https://twitter.com/paulbjensen) and [Github](https://github.com/paulbjensen).",
    "date": "2018-05-23"
  },
  {
    "title": "Scheduled Messaging with RMQ, Redis, Postgres",
    "speaker": "sp3c1",
    "body": "It is kind of interesting how in 2018 we are missing a timed messaging queue system out of the box, and there is no clear standard how to handle the matter. We will showcase some valid use cases, discuss performance, engineering and architectural limitations, implementing and comparing RMQ, Redis and Postgres based solutions.\r\n\r\n\r\nBartlomiej Specjalny, Senior Software Engineer at Bizzby Limited, a fullstack software engineer with background in computer graphics and multimedia.",
    "date": "2018-07-25"
  },
  {
    "title": "A Hobbyist’s Quest for a Personal Server",
    "speaker": "salmanff",
    "body": "How easy is it for a non-techie lay-person to set up a personal server and have their own apps running on it?\r\n\r\nThere's been much talk recently about how large companies host our data, control it, and sell ads against it. But what if we all had our own servers with our own applications running on them holding our data which we control? \r\n\r\nIs that doable today, using existing cloud services and node.js? What does it take? How easy is it?\r\n\r\nFor the past few years, I've been running my personal node.js-based server on AWS, Google Cloud, Openshift and Heroku, using mlabs and Mongo, as well as Dropbox!\r\n\r\nSo I'll talk about what it takes for a non-techie (or at least a newbie) to set up a node.js server using each of those environments - the pluses and minuses of each ... and why doing this would be a good thing in general.\r\n\r\nAbout me:\r\nI am clean tech entrepreneur (@zemenergy.com) and VC executive (@top-funds.com). I code for fun. See http://freezr.info twitter:salmanff github:salmanff\r\n\r\n",
    "date": "2018-04-25"
  },
  {
    "title": "ExpressLess - 200 OK",
    "speaker": "firecode9",
    "body": "Heard about Serverless? Already know Express.js? Too afraid to use the two? \r\n\r\nMy talk will last ~20 mins and will cover the following:\r\n\r\n- Where are my servers? (Moving from the classic setup to a serverless one)\r\n\r\n- Express.js + Serverless?\r\n\r\n- How can I test my serverless app? (Offline testing)\r\n\r\n- Where are my logs?\r\n\r\n- Wait, are my apis public? (Securing your endpoints)\r\n\r\n- Shhhhh....(Keeping secrets)\r\n\r\n### About me:\r\nI started my career over a decade ago writing code for firewalls and security systems (c/c++/java). In recent years I've been specialising in cloud engineering, microservices, aws and serverless (mostly in node.js).\r\n\r\nNow: I'm the CTO of a young and still in stealth mode startup - [sourcingbot.com](http://sourcingbot.com)\r\n\r\n\r\n",
    "date": "2018-05-23"
  },
  {
    "title": "How do I hire tech staff without annoying agencies?",
    "speaker": "Boltz101",
    "body": "Abstract\r\nYou worked in a big company.  You had an idea.  You started a company, and now you need to hire.  But how?  In your previous life CVs just arrived via HR or an Internal Recruiter, now, you put out a job posting and get 300 recruiters a minute calling you, and your Excel sheet on your hard drive isn't being shared and the email chains are causing grief because someone forgot to click 'Reply All'.  In this talk I'll talk through some of the easy ways to engage with talent and introduce you to a few tools for tracking applicants.\r\n\r\nAbout me\r\nI'm Adam and I host events over at www.idinlondon.co.uk.  I'm pretty passionate about recruitment and hate that there are so many people in my industry who give us all a bad name.  I care about finding people jobs that they will enjoy and have a positive hiring experience.  I am not an agency recruiter and I'm not going to start throwing business cards around like confetti.  Please love me.",
    "date": null
  },
  {
    "title": "CV Hacking for the London market",
    "speaker": "Boltz101",
    "body": "Abstract\r\nFinding a role in London is tough.  It's full of cowboy recruiters and companies with 77 stage hiring processes.  How can you make sure you maximise your CV?  How do you ensure that you get approached about relevant jobs (Java / Javascript, anyone?)?  In this session I will take a CV and hack it in to a format that will help you to improve that CV you've just been adding jobs to since the careers adviser helped you write it in school when your \"responsibilities\" were dog walking and baby sitting.\r\n\r\nAbout me\r\nI'm Adam and I host events over at www.idinlondon.co.uk.  I'm pretty passionate about recruitment and hate that there are so many people in my industry who give us all a bad name.  I care about finding people jobs that they will enjoy and have a positive hiring experience.  I am not an agency recruiter and I'm not going to start throwing business cards around like confetti.  Please love me.",
    "date": null
  },
  {
    "title": "My experiments with Chess",
    "speaker": "flipflopapp",
    "body": "[Abstract of your talk]\r\n\r\nI have been experimenting with different variations of chess as a tool to improve memory and abstract thinking, as a tool for social interventions, a variation for blind people and more. I started my experiments in 2015 and have created an app www.Halfchess.com at a slow pace since 2016. \r\n\r\nThe talk is a flash talk and starts with why I got interested in the particular topic; and, the things I built and experiments I did along the way. I also briefly talk about the technologies I used and show how easy it is to hack a chess engine (p4wn) for making your own variations.\r\n\r\n[A bit about you, e.g. current job, twitter handle, etc.]\r\n\r\nI currently work at Mckinsey and am visiting London (from New Delhi) for a quarterly sprint planning meet . If you are really interested in reaching out to me - you can find my CV at www.flipflopapp.com, which has my email address.\r\n\r\n\r\nNOTE: I already gave this talk on 26th Jan, LNUG talk. \r\n",
    "date": "2018-01-24"
  },
  {
    "title": "Internal Server Error",
    "speaker": "claudiamatosa",
    "body": "Who hasn't found themselves in despair after hours of trying to debug a problem that seemed simple, because halfway down the line the stack trace ended in a file called `throw-error.js`, or simply there were no errors thrown and the code just didn't work as expected?\r\n\r\nThe talk will last between 15 and 20 minutes, will be structured in two parts and there will be plenty of gifs and emojis. It should cover errors in Node and browsers.\r\n\r\n### 1. Common bad error handling scenarios\r\n\r\n- Stacktrace lost.\r\n- Code exits without error.\r\n- Generic error messages (`something has failed`).\r\n- ...\r\n\r\n### 2. Exploring possible solutions (examples)\r\n\r\n- Custom errors.\r\n- Formatting error api responses.\r\n- Displaying errors in the UI.\r\n- Examples when using Apollo (GraphQL), React and maybe other tools.\r\n\r\nConclusion: your library/utility/api should be built around its users, and they shouldn't need to read the code to know why something is wrong.\r\n\r\n(I'm really bad with titles 😳)\r\n\r\nI'm a freelance front-end developer, currently working with React and GraphQL.\r\n[twitter](twitter.com/claudiamatosa) | [github](github.com/claudiamatosa)",
    "date": "2018-03-28"
  },
  {
    "title": "Never get stuck with a wrong framework",
    "speaker": "sielay",
    "body": "Case study of our app, where we divided it to multiple heads (microapps/microservices) to allow it to be relatively small and fast, but also be able to shift between different stacks and framework depending on current needs and not carry big cost of wrong choices.\r\n\r\nI'm lead Web & Desktop developer at Pushfor. We build our content sharing solutions mixing vanilla, react, angular, third party libs, stacking that on node and wrapping in electron. Just check my GH account.",
    "date": null
  },
  {
    "title": "My Node.js process is on Fire",
    "speaker": "mcollina",
    "body": "At 10am on Black Friday, your phone rings: the new JS application you deployed came under too much load, and the site has gone down! Your employer is losing sales opportunities... your employer is losing money!\r\n\r\nBut you don’t lose your cool. You log into your cloud provider and tweak your autoscaling settings. Now the deployment can handle the load spike but with four times the number of servers, which is four times the cost.\r\n\r\nThe next day, you try to analyze what happened and begin to optimize your application to prepare for future load spikes. \r\n\r\nThis talk is a journey into the world of Node.js performance, taking a look at the available tools and optimization techniques inspired by insight gained from glimpsing under the hood of Node and V8.\r\n\r\n### Bio\r\n\r\nMatteo is a code pirate and mad scientist. He spends most of his days programming in Node.js, but in the past he worked with Ruby, Java and Objective-C. In 2014, he defended his Ph.D. thesis titled \"Application Platforms for the Internet of Things\". Now he is a Principal Architect at [nearForm](http://nearform.com), where he consults for the top brands of the world.\r\nMatteo is also the author of the Node.js MQTT Broker, [Mosca](http://mosca.io), the fast logger [Pino](https://github.com/mcollina/pino) and of the [Fastify](https://www.fastify.io) web framework. Matteo is also a member of the Node.js Technical Steering Committee. Matteo spoke at several international conferences: Node.js Interactive, NodeConf.eu, NodeSummit, JSConf.Asia, WebRebels, and JsDay to name a few. He is also co-author of the book \"Node.js Cookbook, Third Edition\" edited by Packt. \r\nIn the summer he loves sailing the _Sirocco_.\r\n\r\nTwitter handle: [@matteocollina](https://twitter.com/matteocollina)\r\n",
    "date": "2018-03-28"
  },
  {
    "title": "Cultivating a Microservice Culture with Node.js",
    "speaker": "theninj4",
    "body": "We've spent the last 14 months working with Node.js to migrate the Holiday Extras engineering team away from Node.js monolith applications and over to Node.js microservices. Node.js is the heart and soul of the operation and the time has come to share how it's taken us above and beyond our wildest dreams. In this talk I'll be sharing how we're using Node.js throughout our stack, some of the key projects we've built and the problems they solve, and how to really make the most out of Node.js to build an incredibly powerful engineering experience. \r\n\r\nI'm a software engineer in the tech-foundations pod at [Holiday Extras](http://join.holidayextras.co.uk/) with a remit to improve the efficiency of our engineering team. I've been writing Node.js day-in-day-out for over 5 years and dabble with infrastructure on the side.",
    "date": "2018-02-28"
  },
  {
    "title": "Creating PowerPoint files with Officegen and Node.js",
    "speaker": "paulbjensen",
    "body": "It turns out that you don't need Microsoft Office to create PowerPoint files - you can create them in Node.js. In this talk I will show you how libraries like Officegen allow you to generate PowerPoint files containing text, shapes, charts and images, and demonstrate a real-world use of this tool that we've been crafting to save us some time.\r\n\r\nMy name is Paul Jensen, I'm the author of Manning's Cross Platform Desktop Applications, and I'm the Lead Innovation Engineer at Starcount. My twitter handle is paulbjensen.",
    "date": "2018-01-24"
  },
  {
    "title": "End-to-end testing Single Page Apps and APIs with Cucumber.js & Puppeteer",
    "speaker": "paulbjensen",
    "body": "Developing web applications as separate front end and back end parts is a common practice, but brings with it the challenge of how to test those parts together in an end-to-end fashion.\r\n\r\nIn this talk, I will show you a strategy for being able to test your web application with Cucumber.js and Puppeteer, a library for running Google Chrome in headless mode. We'll also explore how to handle things like seeding the database for the API before running tests, how to select elements in the DOM via Cucumber step definitions, and how to do this in a nice fashion using Node 8's async/await feature. \r\n\r\nMy name is Paul Jensen, I'm the author of Manning's Cross Platform Desktop Applications, and I'm the Lead Innovation Engineer at Starcount. My twitter handle is paulbjensen.",
    "date": "2018-04-25"
  },
  {
    "title": "Unit testing has never been so much fun!",
    "speaker": "lazlojuly",
    "body": "* This is a lightweight and entertaining 15 minutes long talk.\r\n* It is aimed at developers on **ALL** levels.\r\n* Covers basic and advanced concepts.\r\n\r\nBio: I am a JavaScript Engineer with growth mindset. \r\nConnect with me on [Twitter](https://twitter.com/lazlojuly), [LinkedIn](https://www.linkedin.com/in/lazlojuly) or [GitHub](https://github.com/lazlojuly)\r\n  ",
    "date": "2018-01-24"
  },
  {
    "title": "Serverless architectural patterns",
    "speaker": "theburningmonk",
    "body": "**Abstract:**\r\nServerless technologies like AWS Lambda has drastically simplified the task of building reactive systems - drop a file into S3 and a Lambda function would be triggered to process it, push an event into a Kinesis stream and magically it'll be processed by a Lambda function in real-time, you can even use Lambda to automate the process of auditing and securing your account by automatically reacting to rule violations to your security policy.\r\n\r\nJoin us in this talk to see some architectural design patterns that have emerged with Lambda, and how to pick the right event source based on the tradeoffs you want. Here are a few patterns that we'll cover in the talk:  pub-sub, cron, push-pull, saga and decoupled invocation.\r\n\r\n**About me:**\r\nYan (@theburningmonk) is a polyglot developer and architect, he is a regular speaker at user groups and conferences internationally. Yan is the author of `AWS Lambda in Motion`, a co-author of `F# Deep Dives`, and he keeps an active blog at http://theburningmonk.com where he shares his thoughts on topics such as AWS, serverless, functional programming and chaos engineering.",
    "date": null
  },
  {
    "title": "Serverless in production, an experience report",
    "speaker": "theburningmonk",
    "body": "AWS Lambda has changed the way we deploy and run software, but this new serverless paradigm has created new challenges to old problems - how do you test a cloud-hosted function locally? How do you monitor them? What about logging and config management? And how do we start migrating from existing architectures? \r\n\r\nIn this talk Yan will discuss solutions to these challenges by drawing from real-world experience running Lambda in production and migrating from an existing monolithic architecture.\r\n\r\n### About me:\r\nYan (@theburningmonk) is a polyglot developer and architect, he is a regular speaker at user groups and conferences internationally. Yan is the author of `AWS Lambda in Motion`, a co-author of `F# Deep Dives`, and he keeps an active blog at http://theburningmonk.com where he shares his thoughts on topics such as AWS, serverless, functional programming and chaos engineering.\r\n\r\nmy co-speaker is **Scott Smethurst** : Scott’s passion for computing began when he was gifted a Commodore 64 for Christmas in 1988 and really took hold while studying Computer Science at the University of Manchester. He’s been an architect, lead developer and consultant within a variety of industries, working with organisations ranging from a multi-billion pound corporation to a failed start-up. Scott has spent most of the past 2 years designing and building several serverless architectures and has decided to start sharing some of those experiences.",
    "date": "2018-03-28"
  },
  {
    "title": "Classical Inheritance in Javascript",
    "speaker": "thanpolas",
    "body": "Javascript inheritance has always been a challenging issue for new and seasoned developers. In this talk, we will dive deep into the inner workings of Javascript inheritance and see the beauty of prototypical inheritance and the prototype chain. While this is a classic talk, it is particularly relevant to the current debate in the React community over the use of fat arrow vs pre-bounded methods.\r\n[Talk slides](https://speakerdeck.com/thanpolas/classical-inheritance-in-javascript)\r\n\r\nGithub: [thanpolas](https://github.com/thanpolas), Twitter: [@thanpolas](https://twitter.com/thanpolas), [LinkedIn](http://www.linkedin.com/in/thanpolas), [website](http://thanpol.as)\r\n",
    "date": "2018-02-28"
  },
  {
    "title": "Testing Node.js Applications",
    "speaker": "thanpolas",
    "body": "In the \"Testing Node.js Applications\" talk we go through techniques and patterns for effective and optimal testing of your node.js application. We'll talk about how you need to implement your application so it's more testable, how to setup your folder structure, techniques and tactics on setting up your testing libraries and lastly we'll dive into a couple of test examples.\r\n\r\n* *Talk*: https://speakerdeck.com/thanpolas/testing-node-dot-js-applications\r\n* *Github*: https://github.com/thanpolas\r\n* *Twitter*: https://twitter.com/thanpolas\r\n* *LinkedIn*: http://www.linkedin.com/in/thanpolas\r\n* *Home*: http://thanpol.as\r\n* *Job*: _Comming soon_\r\n",
    "date": null
  },
  {
    "title": "⚡️MOAR lightning community node.js talks! ⚡️",
    "speaker": "admataz",
    "body": "We loved it last month when people stood up with ad hoc talks, tips and tool walkthroughs. Much fun and entertainment all round. (If you missed it - check [all last month's videos here](https://www.youtube.com/watch?v=7gCKAfrlkAk&list=PLam_80-FY3vTo_2mlVajPvnqWqUrECJeK))\r\n\r\nThis month it's your turn. For 3-8 minutes, the mic is yours. Add your name and topic as a [comment in this issue](https://github.com/lnug/speakers/issues/119). Or turn up on the night and we will try fit you in... \r\n\r\nAlso, as usual: community announcements, open source projects, job hunters and offers will have a chance on the mic. ",
    "date": "2017-11-22"
  },
  {
    "title": "Moving on from Mongoose: How a great thing finally cornered us",
    "speaker": "xscheiner",
    "body": "Mongoose has helped us greatly to maintain the integrity of our data against a mongodb database. However, we are not able to share the models we use on our apis anywhere outside those apis. And Mongoose schemas are not shareable, which means we cannot consume them on any other level of our applications. This means either using conversion plugins, or else writing and maintaining some other solution. In addition, the mongoose models themselves are not shareable, which means even if we solve the schema issue, we still have at least two sets of models to maintain.\r\n\r\nFinally, we use Typescript, which means ideally we can share schema definitions with that which would allow us to define our entities once and have those definitions propagate to all levels of our applications.\r\n\r\nThe final part of this presentation will focus on the solution we now intend to adopt as we begin to overhaul our entire architecture in the coming months.",
    "date": "2018-01-24"
  },
  {
    "title": "An introduction to Docker and Kubernetes for Node.js developers",
    "speaker": "georgecrawford",
    "body": "Node.js apps can run on a multitude of platforms. But when you ship code to production, how can you be sure that it will behave in the same way it did on your local dev machine? Containerisation is one way to mitigate this risk: by building a virtual 'image' which includes the OS, software and source code that your application needs to run, you can ensure a reproducible build you can trust, which runs in the same way in every environment.\r\n\r\nBut containerisation isn't the whole picture. Take the concept of reproducible, declarative builds to its natural conclusion and you get 'container orchestration': a representation of all of your applications and servers and how they relate together. \r\n\r\nThis talk will introduce containerisation with Docker; how you can use it to make your workflows more predictable and your servers more reliable; and using Kubernetes to spin up your applications in the cloud using nothing but YAML files, with monitoring, logging, scaling and networking all taken care of. We'll be looking at some real-world examples, some tips and tricks, advice on developing on your local machine, and some of the more painful discoveries from a few months of deploying to production.\r\n\r\n---\r\n\r\nI gave this talk at BristolJS recently, and my slides are here: https://speakerdeck.com/georgecrawford/an-introduction-to-docker-and-kubernetes-for-node-dot-js-developers. Video coming soon, apparently.\r\n\r\n---\r\n\r\nGeorge Crawford\r\nhttps://twitter.com/georgeocrawford\r\nhttps://github.com/georgecrawford\r\nhttps://www.linkedin.com/in/george-crawford-185671a9/",
    "date": null
  },
  {
    "title": "Node.js lightning talks",
    "speaker": "admataz",
    "body": "We hear anecdotal stories about how people are using node.js:  self-starters, open source, experimentation, and just having some fun beyond enterprise.  Tonight we will open the mic for short-burst, quick-fire presentations. Maximum 8 minutes to talk about whatever is getting you thinking and acting. Add your lighting talk to the lineup in the comments on [here](https://github.com/lnug/speakers/issues/116). \r\n\r\n### ⚡️ David Scheiner - Moving on from Mongoose: How a great thing finally cornered us\r\nMongoose has helped us greatly to maintain the integrity of our data against a mongodb database. However, we are not able to share the models we use on our apis anywhere outside those apis. And Mongoose schemas are not shareable, which means we cannot consume them on any other level of our applications. This means either using  conversion plugins, or else writing and maintaining some other solution. In addition, the mongoose models themselves are not shareable, which means even if we solve the schema issue, we still have at least two sets of models to maintain. Finally, we use Typescript, which means ideally we can share schema definitions with that which would allow us to define our entities once and have those definitions propagate to all levels of our applications.  The final part of this presentation will focus on the solution we now intend to adopt as we begin to overhaul our entire architecture in the coming months.\r\n\r\n### ⚡️ James Porter - Node powered static sites with React/GraphQL in minutes\r\nSet up and deploy a Node build system + React/Modern JS + GraphQL static site with Continuous Deployment, domain, HTTPs and more with Gatsby and Netlify. The combination of ease of deployment and access to modern Javascript technologies can be a real game changer for side projects and experiments.",
    "date": "2017-10-25"
  },
  {
    "title": " Building an Electron application with NodeJS",
    "speaker": "bernardbaker",
    "body": "NodeJS has many uses, but what about taking the traditional web development offline and developing NodeJS application for the desktop. This talk introduces Electron. A nifty framework which makes desktop application development with NodeJS a breeze and stretches the horizon for businesses and developers to offer desktop applications as solutions to client and business needs.\r\n\r\nWatch Bernard Baker (BTAB [@bernibear2000](https://twitter.com/bernibear2000)) walk you through the development of a production ready application which is being used at Sky which converts videos into sprite sheets for use by online display campaigns.\r\n\r\nBernard Baker is an aspiring programmer who has been coding for over ten years. Currently working as a Digital Innovations Specialist - dreaming up new product ideas, mentoring programmers and investigating new technologies for their benefits in his business domain. ",
    "date": "2017-11-22"
  },
  {
    "title": "Taking LNUG offline",
    "speaker": "simonmcmanus",
    "body": "The LNUG website uses AppCache with the help of [app-cache-nanny](https://github.com/gr2m/appcache-nanny) but with its upcoming [depreciation](https://www.fxsitecompat.com/en-CA/docs/2015/application-cache-api-has-been-deprecated/) I’ve been investigating how Service Workers might improve the experience.\r\n\r\nIn this talk I will explain how the LNUG website gets built, how it uses appCache / service workers and some of the things I’ve learned along the way.\r\n\r\nI'm a remote Javascript engineer, part time conference organiser and my opinions can often be found on twitter: [@simonmcmanus](twitter.com/simonmcmanus). \r\n",
    "date": "2017-11-22"
  },
  {
    "title": "Scalable Scraping in Node and a bit of GO",
    "speaker": "sp3c1",
    "body": "A story of moving a monolithic Python Twisted application into NodeJs and micro services. Will discuss what problems we have faced, how we resolved particular issues and arrived at truly modular structure on AWS. Will highlight pain points and place we see for future improvements. \r\n\r\nBartlomiej Specjalny, Lead NodeJs Software Engineer at Pad Innovation Limited,  a fullstack software engineer with background in computer graphics and multimedia.",
    "date": "2017-10-25"
  },
  {
    "title": "Having your Node.js Cake and Eating It Too",
    "speaker": "robtweed",
    "body": "Rob's article on the [QEWD.js](https://github.com/robtweed/qewd) project was recently [published in the Node.js Foundation's Collection](https://medium.com/the-node-js-collection/having-your-node-js-cake-and-eating-it-too-799e90d40186). \r\n In this presentation, he will expand on the themes discussed in his article, in particular how the architectural design of QEWD.js creates a unique run-time environment that provides a solution to some of the concurrency-related problem areas of Node.js such as CPU-intensive and long-running code.\r\n\r\nRob Tweed ([@rtweed](https://twitter.com/rtweed)) is a Director of M/Gateway Development Ltd,  a consultancy and software development company in the UK that has focused on web and NoSQL database technologies, particularly in the healthcare industry, since the mid-90s.  Rob has been an attendee of LNUG since its earliest meetings - indeed he gave a presentation at the very first meeting in 2011!",
    "date": "2017-09-27"
  },
  {
    "title": "Hapi + Nes + MiniMongo for gloryful reactive apps",
    "speaker": "alanshaw",
    "body": "Ever used Meteor with React? What does it take to recreate the same reactive pub-sub experience using [Hapi](https://hapijs.com/), [Nes](https://github.com/hapijs/nes) and a [MiniMongo](https://github.com/kofrasa/mingo) library? Turns out, not a lot. Introduckting Nesquirk - a small lib built to give new life to your frontend, without having to re-write your Hapi+Mongo based backend.\r\n\r\nIn this talk I explain the merits of the reactive pub-sub experience in Meteor, live coding an example to show how frustrating stale data can be when using a simple JSON HTTP API.\r\n\r\nI then live code a similar app, using Hapi, Nesquirk and React to show how you can bring Meteor's reactive pub-sub magic to your Hapi app without having to rewrite from scratch.\r\n\r\nI am a recently time-poor developer working at [TABLEFLIP](https://tableflip.io/). I used to think I was time-poor but then I had a child and I realised I had no idea what I was talking about. I'm [@_alanshaw](https://twitter.com/_alanshaw) on the Twitters or @alanshaw on the Githubs. I sometimes code things in this language called JavaScript, you might have heard of it. TABLEFLIP ❤️ to build awesome apps for startups and entrepreneurs. I help out with the [Nodebots London](https://www.meetup.com/NodeBots-of-London/) and [Meteor London](https://www.meetup.com/Meteor-London/) meetups sometimes and built this website called https://david-dm.org/.",
    "date": "2017-09-27"
  },
  {
    "title": "Rapid web development with Huncwot & Marko",
    "speaker": "zaiste",
    "body": "**Abstract** [Huncwot](https://github.com/zaiste/huncwot) is an opinionated & minimal Node.js (yet another) web framework, slightly inspired by Clojure and built for ES6/7 era with « batteries included » approach. It tries to formalize conventions and eliminate choices by providing solid defaults for building web applications that increase the programmers productivity. In this talk we'll explore how to build an application with Huncwot, what it brings to the table and how to make (web) programming more approachable, especially to non-programmers.\r\n\r\n**A bit about me** I run a software company called [Nukomeet](https://nukomeet.com/). In my spare time I organise [PolyConf](https://polyconf.com/). Twitter: [@zaiste](http://twitter.com/zaiste)",
    "date": "2017-08-23"
  },
  {
    "title": "Do not yield to javascript generators!",
    "speaker": "BrunoGodefroy",
    "body": "**Abstract** Have you ever found yourself completely lost in front of a yield statement? What is this? Where does my promise go? How come I get the result back?\r\n\r\nGenerators are widely used amoung Node and javascript libraries to enable developers to write powerful code in a simple way.\r\n\r\nI will try to answer all these questions and we will recreate together the [co library](https://github.com/tj/co) that is used, for example, in [Koajs](https://github.com/koajs/koa).\r\n\r\nI would then like to go into a step by step decomposition of [redux-saga](https://github.com/redux-saga/redux-saga) to understand how this wonderful library uses generators.\r\n\r\n**A bit about me** I'm a full stack developer at Theodo UK, a web agency in central London. We help our clients to solve their business problems through code. Our clients range from young startups to large corporates.\r\nTwitter: [@switcher7707](https://twitter.com/switcher7707)",
    "date": "2017-08-23"
  },
  {
    "title": "Node microservices at Pizza Hut",
    "speaker": "lithin",
    "body": "**Abstract**\r\nPizza Hut website is powered by a system of 20+ microservices, all docker-ised and running in AWS. What challenges did we meet while writing it? How do you maintain, develop for, and test a system with extremely high availability on such a scale? It's a bit like juggling twenty fragile glass balls while riding a bicycle. Nevertheless, it's a surprisingly reliable way of delivering the best user experience, and pizza, to our users.\r\n\r\n**More info**\r\nI'll introduce our (complex) infrastructure and will talk a bit more about challenges we have faced and how we solved them.\r\n1. Splitting logic into microservices; changes made into several microservices at once & deployment.\r\n2. Testing our huge products API; running over 20000 unit tests on one microservice, we need to micro-optimise.\r\n3. Making sure it actually works; a system of logging, monitoring, and support\r\n\r\n**About me**\r\nI'm a software engineer at Pizza Hut (contractor), speaker, node and react developer. Previously worked at Red Badger and Time Out. I recently spoke at JeffConf, React London 2017, several meetups.\r\nTwitter handler: [@lithinn](https://twitter.com/lithinn)",
    "date": "2017-08-23"
  },
  {
    "title": "knock-knock-who-there-file-compression-talk_FINAL_2.tar.trz.bz2.gz",
    "speaker": "lrlna",
    "body": "## abstract\r\n\r\nFade in. An opened terminal window. iTerm2 is the flavour. Dracula, the theme. You split the panes in two. You are at it again: a stash of audio buffers and that dream of manipulating a lossless file. With node as your language of choice you embark on the night. You manipulate, you transform, you have your byte order sorted, on their own accord your fingers start to type `gzip -f yourFavPhilCollinsSong.wav`. All of a sudden, a whisper: \r\n\r\n*But what if*.\r\n\r\nwe **stream**.\r\n \r\n*file compression*.\r\n\r\non the **fly**.\r\n\r\nFade to black. \r\n\r\nIn this talk we will walk through file compression algorithms in node as well compression standards. We will cover working with streams, audio buffers, and typed arrays to get us to compress and decompress files, and yourFavPhilCollinsSong.wav.\r\n\r\n## bio \r\n\r\ntl;dr javascript, infrastructure, 🍜 🍜 🍜.\r\n\r\nThe not so short: [Irina](twitter.com/_lrlna) is a Berlin via London via Vancouver (geeeez grrrl) software developer who is, oh hey, hello, really into node.js. She writes node over at scripto.cc and [contributes to a few open-source projects](https://github.com/lrlna) in the meantime. Outside of coding, she spends quite a bit of her time exploring the outdoors, gushing over trains, and reading some Beatniks.\r\n",
    "date": "2017-06-28"
  },
  {
    "title": "async_hooks - tracing the event loop",
    "speaker": "overlookmotel",
    "body": "async_hooks, a new feature in Node 8, lifts the lid on the core of Node's workings - the event loop - and allows you to inspect (and play with) async callbacks.\r\n\r\nIn this talk, I'll explain what async_hooks is, and how you can use it to ease debugging with long stack traces, trace call stacks, store data associated with a single HTTP request in an express app without having to pass around the `req` object, and all kinds of other goodness. And, if you're a module author, how to support async_hooks in your code.\r\n\r\nI run a small company, Cinebox, who provide technical management for film festivals across the UK, with the help of a web-based platform which (of course) runs on Node. http://www.cinebox.co/ Twitter: @cineboxfilm",
    "date": null
  },
  {
    "title": "Trading cryptocurrencies, forex, commodities stocks and more using node.js",
    "speaker": "flyingunicorn222",
    "body": "Description: The aim of the talk is to show what i have learnt and the libraries and tools i have developed over the last couple years after getting into trading bitcoin and ethereum, which turned out later into trading all sorts of things based on technical analysis and a bit of flaky statistics. I'm really bad at making graphs and charts and what not, so expect some hands on approach, the talk should cover the very basics of trading and then how to use trading APIs to actually buy and sell stuff online directly from your command line.\r\n\r\nAbout me: The first time i programmed javascript was twenty years ago and since them i have played around with pretty much all the interesting programming languages i have found in front of me just to discover in 2011 i would actually end up doing everything again using only node.js. During this long journey i have worked on backend and frontend applications, interactive games, multiplayer applications, and whatnot. The last few years my big interest turned to be blockchain, cryptocurrencies and trading. After moving to London nearly seven years ago i worked for a few years in a very nice design studio and then later left to create my own little technology company where all those crazy experiments happen.",
    "date": "2017-05-24"
  },
  {
    "title": "From LNUG presentation to published book - my tale of writing \"Cross Platform Desktop Applications\"",
    "speaker": "paulbjensen",
    "body": "3 years ago I gave a talk at LNUG on Node Webkit, and then posted online. Little did I know that the end result would be writing a book for Manning publications on Electron and NW.js.\r\n\r\nThis talk is about how that happened, the process of writing a book about those Node.js frameworks, and the learnings from undertaking the whole project. \r\n\r\nMy name is Paul Jensen, and I'm a Senior Pre-Sales Consultant at Starcount. My Twitter handle is @paulbjensen.",
    "date": "2017-05-24"
  },
  {
    "title": "Speeding up CI with node and docker",
    "speaker": "willm",
    "body": "Tips for running faster builds with nodejs and docker. This talk mainly outlines lessons learned and optimisations which will hopefully help you get quicker feedback from your CI pipeline and make your deployments run quicker.\r\n\r\nAlthough I have more experience in the back end side of things, I strive to be a full stack developer. I like working on well tested codebases with a well oiled CI pipeline",
    "date": "2017-05-24"
  },
  {
    "title": "How Bionode.io uses Node.JS Streams to handle genomic big data",
    "speaker": "bmpvieira",
    "body": "Bionode.io is an open source community. We aim to provide highly reusable code and tools for genomics by leveraging the Node.JS ecosystem. We are big fans of Node.JS Streams! I will talk about what they are and how you can use them to process large data in chunks.\r\n\r\nBruno Vieira | @bmpvieira\r\nPhD Student in Bioinformatics at WurmLab.github.io (Queen Mary U. of London)\r\nMozilla Science Lab fellow and Founder of Bionode.io",
    "date": "2017-04-26"
  },
  {
    "title": "Automatically build and publish Node and Electron applications for Linux",
    "speaker": "flexiondotorg",
    "body": "An introduction to snapcraft.io and electron-builder, tools that enable you to deliver your Node and Electron applications to millions of Linux users. Packaging for Linux used to be hard, that has changed. The Snapcraft team have built a platform that makes it simple to build and publish your applications so they run on all the major Linux distributions. It gives you  tools to deliver updates at a high frequency without compromising stability. Push a commit and it will automatically build for free in the store for your users.\r\n\r\nMartin WImpress is a passionate Open Source advocate, Linux enthusiast and Podcaster. Lives in Hampshire, England, with his wife and daughter. Works at Canonical making Ubuntu and Snapcraft. Martin is [@m_wimpress](https://twitter.com/m_wimpress) on Twitter.",
    "date": "2017-04-26"
  },
  {
    "title": "JSONata: A declarative syntax for querying your JSON data",
    "speaker": "andrew-coleman",
    "body": "JSON is becoming the de facto standard format for exchanging data between systems over the Internet.  Its key strengths are its lightweight syntax and its simple data model, which have helped propel it to be the dominant payload format in RESTful web services.\r\n\r\nA lightweight data format deserves a lightweight query and transformation technology that is accessible to non-programmers.  [JSONata](http://jsonata.org) provides that in an open-source module that can be embedded in a web page or used in a node.js app.  Designed with the principle that queries should be simple to write, JSONata has a very shallow learning curve. Yet sophisticated expressions can be quickly mastered by combining the simple navigation syntax with a rich set of operators and functions for extracting, manipulating and aggregating JSON data. \r\n\r\nThis session will introduce you to JSONata and show you how to find buried treasure in your JSON data.\r\n\r\n\r\nAndrew Coleman is a senior software engineer at IBM specialising in data transformation and application integration.  He is currently building a graphical data mapper for [integrating cloud based services](http://www-03.ibm.com/software/products/en/ibm-app-connect).\r\n\r\nAndrew is the Chair of the [W3C XML Query Working Group](https://www.w3.org/XML/2015/05/query-charter.html) responsible for developing the [XPath](https://www.w3.org/TR/xpath-31/) and [XQuery](https://www.w3.org/TR/xquery-31/) family of specifications.  He has borrowed heavily on the experience gained from this to create the [JSONata](http://jsonata.org) query and transformation language for JSON.",
    "date": "2017-04-26"
  },
  {
    "title": "'Minecraft' in VR in 30 lines of Javascript",
    "speaker": "jamesporter",
    "body": "Leveraging A-Frame and React we will discover just how easy it is to build interactive WebVR experiences.\r\n\r\nJust as you create web front ends with React you can place images, text and 3D objects in an interactive 3D VR world. We will learn the basics of A-Frame and how React and Modern Javascript allows us to encapsulate and manage the complexities of it; allowing us to quickly create maintainable/extensible Apps and Visualisations.\r\n\r\nThe talk will be very much focused on the code/running samples (which are available on Github).\r\n\r\nIt will be a shorter and improved version of part of a workshop [I gave last November](http://lanyrd.com/2016/over-the-air/sfphcd/) \r\n\r\nI'm James Porter [@complexview](https://twitter.com/complexview). I work at Motivii as a polyglot (but often Javascript) developer and data scientist, though a few years ago was an economic researcher. Recently I have been exploring WebVR, React Native and Elm in various side projects.",
    "date": "2017-03-22"
  },
  {
    "title": "Fullstack integration testing that doesn't suck",
    "speaker": "artemave",
    "body": "With the help of electron, it is now possible to run your entire web stack (SPA + backend) in a single process. When applied to testing, this becomes a compelling alternative to webdriver based testing, as it is much faster and easier to debug.\r\n\r\nIn this talk, I am going to start with setting some base terminology of what types of tests there are in a typical web app, what they're for and then show off a [real example](https://github.com/featurist/full-stack-js-testing-demo).\r\n\r\nMy name is Artem Avetisyan. I work at [Featurist](http://www.featurist.co.uk/). We're a small bunch of like minded individuals who believe that Javascript is the one. We're also very serious about testing and we like good tools. Oh, and we're hiring too.",
    "date": "2017-03-22"
  },
  {
    "title": "Don't Let Just Node.js Take the Blame!",
    "speaker": "danielkhan",
    "body": "## Abstract\r\nMost likely you are choosing Node.js because it has the reputation to be super-fast, easy to use and you heard a lot of success stories at meetups and conferences. Sure you did performance and scalability tests which confirmed that your decision was correct to go with Node.js. \r\n\r\nWhat Daniel has seen is that in enterprise environments Node.js often acts as the (often microservice based) gluing tier that connects legacy services to modern offerings like mobile apps or your HTML5 SPA (Single Page Apps) via a REST API Layer. \r\n\r\nThis means that once you integrate your application into the company infrastructure, connect it to internal & external services and go productive you may be the first person to be blamed because \"the website is slow\" or even better \"something broke – there is an error we have not seen before\". But who knows if in fact a service consumed or brokered by Node or a database is slow?  In this session Daniel will cover - how to trace down problems inside Node - the challenges operations is facing in todays highly heterogeneous applications - how to protect the boundaries of your service to pinpoint problems in other tiers - new tracing features in upcoming versions of Node.\r\n\r\n## Bio\r\nPragmatic fullstack engineer from BGP to AJAX. Speaker, mentor and course author. I am leading the Node.js technology efforts of Dynatrace. Member of Node.js Diagnostics WG. Let's chat about the old days, todays cutting edge technologies, (web) performance ... you name it.\r\n\r\n[@dkhan](https://twitter.com/dkhan) on twitter\r\n\r\n",
    "date": "2017-06-28"
  },
  {
    "title": "Promises & Generator in node.js",
    "speaker": "TheBenji",
    "body": "As part of ES6 node finally has a native support for promises and generator.\r\nIn this talk I'd like to introduce you to the concept and syntax of both, show you some ways you may use them in the real world and give a quick lookout what's up next.\r\n\r\nHey, my name is Ben, I’m a dev from Germany.\r\nThe first time I came in contact with code I was probably around 12 years old.\r\nMy dad gave me a little model train set and we hooked it up to an old computer so I could program (with QBasic, fun times!) the trains and make them automatically drive around and stop at train stations and fun stuff like that.\r\n\r\nBy now I learned a little more about software development and worked in a variety of different companies mostly buildings APIs with a node stack in one form or another.",
    "date": "2017-02-22"
  },
  {
    "title": "Serverless and You",
    "speaker": "MarcelCutts",
    "body": "Cloud computing services such as AWS, Azure and Google Compute have rapidly changed how we think and feel about our infrastructure. DevOps deployment is no longer copy-pasting a zip folder full of code onto a physical machine's network drive - and nothing is pushing the engine of change more than Serverless.\r\n\r\nServerless allows us to create event driven node micro-services with absolute ease, perfectly fitting into continuous integration / continuous deployment workflows. It boasts a wide range of plugins, and more importantly, allows us to effortlessly scale any number of stages to the nth degree.\r\n\r\nIs Serverless for you? Quite probably! Lets find out.\r\n\r\nMarcel (@marcelcutts) is a shifty vagabond type often found near laptops, currently belonging to the street gang known as Red Badger. Over his ten or so years in software he has worked on everything from scientific Fortran to the most hipster React code and will be your personal best friend forever should you feed him a BLT.",
    "date": "2017-02-22"
  },
  {
    "title": "Our future is in little hands",
    "speaker": "tonyyates",
    "body": "I am a huge advocate of women in technology, and I am active in the Health Tech Women movement. I think it is essential that we teach children both boys and girls the fundamentals of computing and engineering at an early age.\r\n\r\nI practice what I preach with my own daughter who hacked a chromebook at 3 years old. We also took some unique approaches to her homework which she has shared with school.\r\nBasically the aim of my talk is to encourage others to get involved with technology and their children at an early age, they love it more than gazing at iPads too.\r\n\r\nI wrote a [blog post](http://www.tonyyates.co.uk/my-3-year-old-daughter-hacked-a-google-chromebook/) which shows one of the many projects we have create. We also done some using nodered, arduiono and shrimpkit which form the basis of my talk.\r\n\r\nAbout Me\r\n\r\n[@TonyYates](https://twitter.com/tonyyates) on Twitter\r\nI am currently lead technical architect for NHS.UK, Citizen ID, Personal Health Records, and NHS Public WIFI all these are going through a major transformation at the moment but that is another talk as we use nodejs heavily.\r\n\r\nLover of most technologies (except Ruby, I don't know why), keen cyclist, dad to 3 children under 5 years old so I get little sleep.",
    "date": "2017-03-22"
  },
  {
    "title": " Native app tips to save your sanity",
    "speaker": "trevorah",
    "body": "9 months after you’ve started writing a hybrid app, you’re going to stumble across some unexpected native problems that don’t show up in tutorials. This talk will go over these and other oddities that most web developers wouldn’t expect.\r\n\r\nTalk includes:\r\n* classic Android and iOS architecture for restful apps\r\n* weird native bugs (with fixes)\r\n* great things that javascript/web should have\r\n\r\nI'm Andy Trevorah, app developer for hire.\r\nTwitter: `@trevorah_`\r\nWebsite: https://trev.sh",
    "date": "2017-01-25"
  },
  {
    "title": "Modelling with Pencils (and JavaScript)",
    "speaker": "jonnyarnold",
    "body": "*Abstract*\r\n\r\nOften the work of a software developer is to write down complicated things in an unambiguous way. In this talk I'd like to remind you about mathematical modelling - writing down mathematical relations that approximate a situation - and give a real story about how I should have started with a pencil rather than a keyboard.\r\n\r\n*About Me*\r\n\r\n[Jonny Arnold](http://jonnyarnold.uk/) has been a software developer professionally for 5 years and  as an amateur for another 5. Having worked with C# and Ruby in the past, Jonny is now using JavaScript to build an online mortgage broker at [Trussle](http://www.trussle.com/).",
    "date": "2017-02-22"
  },
  {
    "title": "GraphQL: an API convention that you will actually follow",
    "speaker": "clementhannicq",
    "body": "REST is recognized as the \"good practice\" in terms of web APIs, but can quickly become a hassle as your application grows and evolves.\r\nQraphQL is a new paradigm, allowing developers to request deeply nested information in a single call, without cluttering the response with unneeded fields.\r\nIn this talk, I will show how GraphQL overcomes the rest limitations to send only the information a caller wants, without changing anything on your backend.\r\n\r\nI am currently working at Theodo (http://www.theodo.co.uk/) and have been for the past 18 months, as a fullstack developer.",
    "date": "2017-01-25"
  },
  {
    "title": "Docker Inside/Out: the ‘real’ real-world of stacking Node.js containers in production",
    "speaker": "foldingbeauty",
    "body": "Did you’ve already containerized the shit out of your `Node.js` code, broken down monoliths, microserviced the hell out of your app and have run some awesome workloads in your local, dev and test environments. It’s all looking good, but now what?\n\nRunning `Docker` on your local box is one thing, but maintaining containers in production is a whole other ballgame. So during this talk, I’ll show you the REAL wild world of Docker in production. With the added benefit of talking to and observing how over 900 of our customers have been using Docker in production for Node, I’ll be presenting some of these data points and sharing our observations on how to get it right. \n\nMy aim? I want to turn the conversation on its head and dispel some of the ‘silver bullet’ assumptions flying around by taking an inside-out approach to building with Docker. The idea is to provide you with a framework for how to get your code into containers, streamline the Docker build flow and avoid common pitfalls when moving from dev to live environments.\n\nBecause remember, Docker will NOT, and I repeat, will not solve your bad dev and ops behaviours. So don’t end up with a ‘hot mess’ (more on that later).\n\n**Daniël van Gils** is a polyglot developer advocate at [Cloud 66](https://www.cloud66.com). He helps other developers craft web applications and container based microservice architectures with ♥. An accomplished creative technologist, Daniel has vast and varied experience in application development, agile workflows and building container technologies at scale, gained working in the web development, creative technologies and gaming industries. In his spare time he experiments with strawberries in his backyard, likes to surf and practices improvisation theater.\n",
    "date": null
  },
  {
    "title": "2. Null Can't Hurt You Anymore",
    "speaker": "svozza",
    "body": "This talk follows on from @cullophid's session and seeks to build on those foundations with larger abstractions that can help developers to avoid common pitfalls when writing JavaScript such as null references (`Maybe`s), uncaught exceptions (`Either`s) and asynchronous control flow (`Future`s). These abstractions help to encapsulate uncertainty allowing us to code the happy path whilst ultimately enforcing the handling of error conditions and as the data types all share a common interface it allows us to compose them in predictable ways.\r\n\r\nStefano Vozza is a tech lead at Trinity Mirror and has a keen interest in functional programming, DevOps and continuous delivery. He is a main contributor to several open source Javascript FP libraries such as [Sanctuary](https://github.com/sanctuary-js/sanctuary), [date-fp](https://github.com/cullophid/date-fp) and [Highland](https://github.com/caolan/highland). \r\n",
    "date": "2016-11-23"
  },
  {
    "title": "3. Readable Microservices, with functional programming.",
    "speaker": "jc888",
    "body": "In the final talk James Chow will talk about how the principles \r\nof functional programming aligns itself with modern distributed architectures.\r\nJoin him as he builds a fully functional microservice application\r\nusing our new functional programming toolbox. James shows us how all the various\r\nparts of functional programming comes together to create safe efficient code\r\nthat is easily readable and extendable. \r\n\r\nJames chow has been a software contractor for over 10 years.  He is currently Devops Engineer for Discovery where he manages Infrastructure, and advises on constructing applications.",
    "date": "2016-11-23"
  },
  {
    "title": "1. Keep calm and curry on",
    "speaker": "cullophid",
    "body": "In this first talk we will look at the fundamental principles that underpin the functional programming paradigm.\r\n\r\nWe introduce some of basic techniques that makes functional programming so powerful. \r\nThese are techniques you can easily apply to your codebase to increase readability and reusability.\r\n\r\nAndreas Møller is a London based full stack JavaScript developer. Andreas splits his time between contracting and his role as CTO of his analytics startup Sentia.\r\n",
    "date": "2016-11-23"
  },
  {
    "title": "A year with AWS",
    "speaker": "clarkie",
    "body": "Moving from a company where everything ran on 'bare metal' in a DC on Goswell Road to a startup where everything was already running in AWS has proven to be an interesting learning curve.\nThis talk will take you through some of my learnings along the way and some of the ways we use bits of the AWS toolkit now at Tido. \n\nClarkie\nCTO @ [Tido](http://tidomusicapp.com/)\n@clarkieclarkie \n",
    "date": "2017-01-25"
  },
  {
    "title": "Write More Resilient JavaScript with Flow",
    "speaker": "bookercodes",
    "body": "**Abstract**\n\nFlow is a static type checker for JavaScript (an otherwise dynamically-typed language). You can think of it as a productivity tool that catches common errors _before_ they run. \n\nTake the infamous \"'Undefined' is not a function\" error as an example. When writing vanilla JavaScript, you would have to wait until runtime to receive this arduous error. Flow - on the other hand - integrates with your favorite editor and analyzes the correctness of your code as you write it. If you were to reference a non-existent function, Flow would not only tell you immediately but also provide additional context that makes the error easier to fix.\n\nWhilst Flow is predominantly used with front-end technologies like React, I have been using it with great success for my Node.js projects and in this talk, I'll not only show you how to get up and running with Flow, I'll also share my experience with you. I'll also take a moment at the end of my talk to touch on the differences between Flow and TypeScript.\n\n**Alex Booker**\n\nAlex Booker is a Developer Advocate at [Pusher](https://pusher.com/). There, he spends his time learning and writing about interesting, emerging technologies, and representing Pusher at events around the world. In his spare time, he runs a YouTube channel called [Code Cast](https://www.youtube.com/c/codecast) where he uploads educational screencasts about Linux and JavaScript. You can find him on Twitter [@bookercodes](https://twitter.com/bookercodes).\n",
    "date": "2016-10-26"
  },
  {
    "title": "How to build a RESTful API",
    "speaker": "lazlojuly",
    "body": "Talk agenda:\n1. The REST Design\n2. Specification\n3. Mocking\n4. Testing\n\nThis talk will also look at some popular API tools.\n\nBio: I am a JavaScript Engineer. Connect with me on [Twitter](https://twitter.com/lazlojuly), [LinkedIn](https://www.linkedin.com/in/lazlojuly) or [GitHub](https://github.com/lazlojuly)\n",
    "date": "2016-10-26"
  },
  {
    "title": "Quick wins with node and Google AMP",
    "speaker": "mikemaccana",
    "body": "Google's Accelerated Mobile Pages (AMP) is a subset of HTML designed to load as quickly as possible. AMP pages keep your users happy, get you higher in search engine results pages, and related features like structured data can get you right to the top. Here's how a little node engineering can mean more money in your pocket. \n# Talk Description\n\nWhat AMP is:\n- What you gain (pagerank, content previews inside Google search, low latency)\n- What still works and what breaks (analytics, conversion tracking etc support is still ongoing)\n\nImplementing AMP in a node app:\n- Creating an AMP version of your existing layout\n- Converting output from your existing template engine to AMPHTML via server-side DOM manipulation\n- Handing analytics in an AMPHTML world\n\nI've written and Open Soured some express-compatible middleware to make this job easier, see https://www.npmjs.com/package/amps-in-the-trunk\n## Bio\n\nMike MacCana is the founder of CertSimple, a startup that provides EV HTTPS certs - the ones where they check who you are - 40-500x faster than it's competitors. He's previously built web apps for Google, Adobe and Microsoft.\n",
    "date": "2016-10-26"
  },
  {
    "title": "Ace JavaScript Interviews: Scoping and Hoisting",
    "speaker": "foxreymann",
    "body": "Back to basics of JavaScript. Informative, interesting and entertaining talk. Great knowledge refreshment for those who know JavaScript. Essential education for those who never learned JavaScript properly.\n\nNode.js Developer. Web Development Trainer. Looking for new opportunities. @foxreymann\n",
    "date": "2016-09-28"
  },
  {
    "title": "Harnessing the full power of Redis",
    "speaker": "dmagliola",
    "body": "The vast majority of projects use Redis like it's Memcached, but Redis can give so much more. In this talk I'll give practical examples of use cases where Redis, with its very particular set of skills, outshines everything else I've tried.\n\nBio:\nDaniel Magliola has been writing code since he was 7 years old, professionally since 16, and through those years has dabbled in multiple technologies. These days you'll find him trying to extract every last bit of performance out of web applications.\n\n[Portfolio / Bio / CV / about me](http://danielmagliola.com/)\n\nNote on length: \nI _can_ fly through this talk in 25 minutes, I can probably also shorten it a bit more and do it in 20 (with no time for Q&A), but it's really a whirlwind. If I could have 30 or more that'd make it a lot more understandable by the audience :-)\n\nNote on dates: \nI can do August, but not September unfortunately.\n",
    "date": "2016-08-23"
  },
  {
    "title": "Node.js, the Web and the IoT",
    "speaker": "domguinard",
    "body": "Everyone talks about the Internet of Things, but the lack of interoperability in the IoT today means what we really have is a series of isolated \"Intranets of Things\". This fragmentation and the high costs of integration required to overcome it, shows that we're failing to realize the full potential of the IoT.\n\nJust like the Internet needed the Web to become successful, the Internet of Things needs an application layer to truly blossom. The Web of Things (WoT) approach offers a compelling solution to this problem. The core of the Web of Things (http://webofthings.org) approach is quite simple: why don't we re-use Web standards to build the APIs of Things?\n\nIn this talk I'd like to introduce a book we just published at Manning press (http://book.webofthings.io) on how to build an open IoT using Web technologies. The talk will look at the layers of integration to the Web, from IoT networks, to Web APIs, the semantic Web and the programmable Web all of this illustrated with Node examples (as the book is based on Node.js code for the Raspberry Pi).\n\nAbout me:\nTwitter: @domguinard and @webofthings\nCTO and co-founder @EVRYTHNG\nhttp://dom.guinard.org\n",
    "date": "2016-07-26"
  },
  {
    "title": "Event Driven Architecture",
    "speaker": "gnugat",
    "body": "When [Node.Js](https://nodejs.org/en/) says \"`event-driven, non-blocking I/O`\", have you ever felt it was some sort of black magic? Well in this talk we'll [make the magic go away](https://blog.8thlight.com/uncle-bob/2015/08/06/let-the-magic-die.html) by implementing our own simple HTTP server, Event Loop, Scheduler, Deferer/Promise and [Thread Pool](http://screencrush.com/442/files/2016/02/deadpool-2-boyfriend-pic.jpg?w=720&cdnnode=1).\n\nOh, Hi by the way! I'm Loïc (it's pronounced Low-ic), a \"Lead Engineer\" (read Lead Dev) at [Constant Commerce](http://constant.co/). You'll find that I [tweet](https://twitter.com/epiloic) and [blog](http://gnugat.github.io/) a lot about tech. I aslo [contribute a bit](https://github.com/gnugat) to FOSS projects.\n",
    "date": "2016-09-28"
  },
  {
    "title": "Node.js on Google Cloud",
    "speaker": "meteatamel",
    "body": "In this session, I will show how to deploy your Node.js app to Google Cloud, talk about versioning and traffic splitting for your Node.js app, portability with Docker and if there's time, briefly talk about live debugging and tracing using Stackdriver.\n\nI'm a Developer Advocate at Google for Google Cloud Platform. @meteatamel\n",
    "date": "2016-07-26"
  },
  {
    "title": "AVA: Futuristic JavaScript test runner",
    "speaker": "novemberborn",
    "body": "AVA is a futuristic JavaScript runner. It's designed to make testing easier and perhaps even fun. Let's talk about its design philosophy, some of it's powerful features and what's next.\n\n---\n\nI'm Mark, member of the AVA core team. I try and spend my time doing Node/JavaScript contracting and open source work.\n",
    "date": "2016-07-26"
  },
  {
    "title": "LNUG May lineup",
    "speaker": "admataz",
    "body": "Hi @alexjeffburke, @theninj4, @srounce  and @tanzim\n\nSeems we have a lineup of 4 speakers instead of our usual 3 for May (we're not sure how this happened)\n\nFirst-off - would any of you _prefer_  [June 22nd](https://github.com/lnug/speakers/milestones/June%2022nd%202016)?  - if so, let me know, and we can shift your talk. \n\nOtherwise, can you let me know how long your talks are? If we have a couple shorter than 20 mins we could possibly squeeze you all in. \n\nFailing that - we will discuss a plan among the @lnug/organisers and let you know - things may need to get shuffled!\n\nBest, \n@admataz\n",
    "date": "2016-05-24"
  },
  {
    "title": "add issue template",
    "speaker": "clarkie",
    "body": "no idea if this will work or not\n\nhttps://github.com/blog/2111-issue-and-pull-request-templates\n",
    "date": null
  },
  {
    "title": "Building Complex SPAs with React and ESP",
    "speaker": "KeithWoods",
    "body": "What does it take to build a complex single page application (SPA)? How do you model state in a way that can be reasoned with yet scales with functionality and remains maintainable? How do you separate your view code from your state and update state in a deterministic manor? We'll answer these questions using a real world open source sample application, [Reactive Trader](https://github.com/AdaptiveConsulting/ReactiveTraderCloud), build on [React](https://facebook.github.io/react/) and Evented State Processor ([esp-js](https://github.com/esp/esp-js)).\n\nKeith Woods has been working in the city for several years on real time push based FX trading platforms.\nConsulting at various banks he has helped developed some of the worlds leading FX platforms using a range of differing technologies (including .Net, Java and JS). He works right across the stack. He is the author of ESP ([esp-js](https://github.com/esp/esp-js), [esp-net](https://github.com/esp/esp-net)), build to solve complex state modelling problems.\n",
    "date": "2016-06-21"
  },
  {
    "title": "Declaratively mocking HTTP",
    "speaker": "alexjeffburke",
    "body": "I am a co-maintainer and the second largest contributor to an open source library named [unexpected-mitm](https://github.com/unexpectedjs/unexpected-mitm). This is a plugin for [Unexpected](http://unexpected.js.org), an extensible assertion tooklit, which enables HTTP mocking using declarative descriptions written in plain JavaScript. Unexpected itself is an open project is supported by a small but growing community. MY goal would be to give a basic introduction to Unexpected assertion syntax, some elements of it's extension API and combine those with an introduction to the functionality in unexptected-mitm.\n\nMy name is Alex J Burke, I currently work as the Lead Platform Developer at a small company in London. I have worked on node the node platform building web application backends and associated software from version 0.6 onwards. I've a Computer Science degree from King's College London and lived for three years in Copenhagen where for a time I worked for a medium size web hosting firm. My handle around the internet is alexjeffburke.\n",
    "date": "2016-05-24"
  },
  {
    "title": "Infinitely scalable chat",
    "speaker": "nelsonic",
    "body": "Last month @tanzim _introduced_ you to AWS Lambda ... \nthis time we're going to _show_ you how to build a chat/messenger app that scales to **_hundreds of thousands of messages per second**_ without deploying a single Docker Container or manage a Database. \n\nOverview\n- Instead of using a (_traditional_) Node.js Web Server, we'll be using Lambda Functions. (_Don't worry, its still node.js_...)\n- Instead of a (_traditional_) Database, DynamoDB.\n- Instead of Pub/Sub and Socket.IO we will use [AWS SNS](https://aws.amazon.com/sns/)\n- If there's time we can also show how to do Facebook/Twitter/Google Auth using [AWS Cognito](https://aws.amazon.com/cognito/)\n\nWe will be writing the code for the app over the next couple of weekends. \nIt will be similar to our previous demo app: https://github.com/dwyl/hapi-socketio-redis-chat-example\nin that there will be **_end-to-end tests**_ _and_ **_detailed documentation**_, but that's where the similarity ends!\n\nDuring the talk we will do a full stack/code/deployment walkthrough (_aprox 15 mins_)\nand then do AMA/Q&A (_5 mins_)\n\nWe already have _extensive practical_ notes on using AWS Lambda: https://github.com/dwyl/learn-aws-lambda ... these are going to be expanded into an end-to-end tutorial which _everyone_ can follow. \n\nIf you are _curious_ about the _future_ of web apps, give us a thumbs up.\n",
    "date": "2016-04-26"
  },
  {
    "title": "Microservices development in node.js",
    "speaker": "pelger",
    "body": "**Abstract:**\nWhilst micro-service based architectures promise many benefits in production, such as rapid continuous deployment cycles. Current developer tools are lagging behind. Irrespective of platform our current toolchains are very much oriented around the construction of monolithic application stacks and are unwieldy and cumbersome when applied to micro-service based systems. This talk will demonstrate a dynamic and responsive developer toolchain for micro-services implemented in and targeting node.js, that is more aligned with this architectural style. This talk will cover the tools that nearForm use to develop micro-services in the wild, something we've discovered and iterated on over the last three years.\n\n**Bio**\nPeter Elger is Director of Engineering with nearForm, a Node.js consultancy - http://nearform.com.\nFormerly a physicist working on the JET nuclear fusion research project, Peter has been co-founder \nand CTO of two companies prior to nearForm and holds degrees in theoretical physics and computer science. Based in Ireland, Peter has spoken and run workshops at many international conferences including, Node Interactive, nodeConfEU, Node Summit, node day (NYC), DevOpsCon, JS Conf.\nTwitter: @pelger\n",
    "date": "2016-03-23"
  },
  {
    "title": "NoSQL is a lie",
    "speaker": "ukmadlz",
    "body": "NoSQL is a term on the rise, and it's a lie. NoSQL is a catch-all term and I will point out why a catch all means missing tools that may help solve your problems. Going through a few popular DB's we will walk through the use cases and why they're good at what they do.\n\nJob: Developer Advocate @ IBM Cloud Data Services\nTwitter: @ukmadlz\n",
    "date": "2016-03-23"
  },
  {
    "title": "NodeJS Failure in Production - a Blameless PostMortem",
    "speaker": "theninj4",
    "body": "Failure happens. Are you ready for it? Here at Holiday Extras we've been running NodeJS in production for 5 years, it's been a critical part of our infrastructure for the last 3 years. In June 2015 we thought we had solved failure... then one day our API crumbled around us. We followed the incident with a Blameless PostMortem which forms the basis for this talk. I'm going to run through how we're using NodeJS in production, the countermeasures we had in place and a chronological run through of what happened, the metrics we care about, the mitigations and the solutions.\n",
    "date": "2016-06-21"
  },
  {
    "title": "What learning to code in 12 weeks really means",
    "speaker": "michaellennox",
    "body": "With Makers Academy currently hosting LNUG I thought it might be a great chance to give a talk to cover a few things about it including:\na) what a bootcamp is, \nb) what they teach, \nc) what is actually meant by the concept of 'learning to code in 12 weeks',\nd) what it feels like as a student to push yourself to go from very little coding capacity at the start to being able to write, test and deploy applications 3/4 months later,\ne) the contrast between CS and bootcamp style education and why there is such a demand for alternate education sources in the current market\n\nI would be very interested in giving a talk of how Makers Academy has shaped my transition from a very different career path into a junior developer passionate about what I do. The talk would be rather technology agnostic, although node is one of the technologies I have had the pleasure of working with (and had to get to grips with very rapidly during a craft-a-thon), it would be much more based around trying to let people know about the trials and tribulations of the Makers Academy student journey.\n\nI'm Michael, a junior developer who's just finished here at Makers\nYou can learn a little more about me at [michaellennox.me/blog](http://www.michaellennox.me/blog/)\n",
    "date": "2016-04-26"
  },
  {
    "title": "NodeJS a professional case study",
    "speaker": "bernardbaker",
    "body": "Hiring people from these events work! And small NodeJS apps that get things done.\n\nWhen I came to a previous event I was asked if I was hiring... I was, and found a great candidate and now a new team member for our development team.\n\nShe will describe her working day and the different things she has been doing with us at Sky Works since she started.\n\nAfter that I will take you through the build and development of a small NodeJS app which gets a single task done well. We use it to update obfuscated JavaScript files.\n\nI'll explain the project/technical/functional brief and then take you through the development in steps of progress, there will be live coding of parts of the application and an explanation of how the libraries used work.\n\nAt the end I will present the live application which is hosted on Heroku.\n\nTwitter: @bernibear2000\nGithub: bernardbaker\n",
    "date": "2016-08-23"
  },
  {
    "title": "Debugging Node.JS",
    "speaker": "srounce",
    "body": "_\"What's a debugger?\"_, _\"What's the *point_ of debugging?\"_, *\"How do I debug Node?\"_, _\"But what about TDD?\"_, and **_\"Why the ƒ#@|{ doesn't my code run?\"**_. \nLife's great questions. \nJoin me, as we peel back the layers of preconceived debugging drudgery, to reveal the answers to these questions — and some others you never asked.\n",
    "date": "2016-05-24"
  },
  {
    "title": "Isomorphic apps with Hapi.js and React",
    "speaker": "lucamezzalira",
    "body": "In this talk I'd like to show a quick example on how to create an isomorphic application with Hapi.js and React, in particular focusing why Hapi.js allows to create configurable and well organised code and how to use React as views for your isomorphic application.\n\n**Speaker**: Luca Mezzalira\n**Linkedin**: https://uk.linkedin.com/in/lucamezzalira\n**Twitter**: https://twitter.com/lucamezzalira\n",
    "date": "2016-06-21"
  },
  {
    "title": "Computing at scale. Why you should already be using AWS Lambda",
    "speaker": "tanzim",
    "body": "Node.js is awesome for I/O. But what happens when you need to use CPU bound operations? Or what happens when you don't want to bog down your server with lots of long running tasks? Lambda from AWS gives you just the medicine to solve these headaches and more. Join me for a quick overview and how we solved some real world problems elegantly leveraging the power of Lambda\n\nAdditional links:\n\nhttp://aws.amazon.com/documentation/lambda\n",
    "date": "2016-03-23"
  },
  {
    "title": "I've got swagger. Have you?",
    "speaker": "tanzim",
    "body": "OpenAPI Specification, formerly known as Swagger is a well established standard for defining REST API interfaces. In this talk I'd like to quickly go over Swagger, how you can integrate it with node.js and a few best practices that goes a long way to deliver robust enterprise class API service\n\nAdditional links:\n- https://github.com/OAI/OpenAPI-Specification\n- https://github.com/swagger-api/swagger-node\n",
    "date": "2016-09-28"
  },
  {
    "title": "Shotguns and Scalpels: Cheerio and Casper at scale",
    "speaker": "mikemaccana",
    "body": "Two very different techniques to get Other People's Data. Cheerio to make the easy stuff easy, and Casper to make the hard stuff possible. Casper is complex: this talk makes it painless.\n",
    "date": "2016-04-26"
  },
  {
    "title": "Stranger Danger: addressing the security risk in npm dependencies",
    "speaker": "guypod",
    "body": "Open source modules, and especially npm, are undoubtedly awesome. However, they also represent an undeniable and massive risk. You’re introducing someone else’s code into your system, often with little or no scrutiny. Each component may have vulnerabilities (~14% of them do!), may be compromised, or even be outright malicious. Multiply that risk by hundreds of dependencies, and you have a recipe for disaster.\n\nIn this talk we’ll show how you can mitigate this risk without losing productivity. We’ll share more data more about the risk; show how to find & fix known vulnerabilities in these dependencies; discuss how to prioritize the ones worthy of manual inspection & suggest what to monitor in production. \n",
    "date": "2016-02-24"
  },
  {
    "title": "Taming Asynchronous Programming with RxJS",
    "speaker": "shakyShane",
    "body": "Asynchronous programs can be confusing, hard to follow, difficult to debug and, quite frankly, just down right _annoying_ to write. \n\nMouse & touch events in the browser, XHR requests, node's various event emitters... - what if there was a way to model all of these eventual values in the exact same way? RxJS allows us to do exactly this with the Observable. Boasting a rich set of composable operators, you can begin to unravel your spaghetti code and author declarative transformation pipelines that are simply not possible otherwise.\n",
    "date": "2016-02-24"
  },
  {
    "title": "How to build a real-time application with Node",
    "speaker": "zsid",
    "body": "I would like to do a beginner level talk on Node. As someone who is just starting to learn Node, I want to share my experience and make a walkthrough presentation. I haven't decided whether I will be building a game or not.\n",
    "date": "2016-02-24"
  },
  {
    "title": "NodeJS Supercomputing?!",
    "speaker": "hxoliverrumbelow",
    "body": "Join me in a wild adventure to take a computationally heavy single-use NodeJS application and automagically scale it across many cores and many servers in the hunt for lazy performance. Disclaimer: This is all for fun, games and science.\n",
    "date": "2016-01-27"
  },
  {
    "title": "Update the readme to ask for twitter handle",
    "speaker": "iancrowther",
    "body": "Unless the speaker provides this information, we cant automate adding the data to the website.\n- Update the readme to ask for twitter\n- Update the validation bot to check for twitter if its a mandatory field (which it should not be imo)\n",
    "date": null
  },
  {
    "title": "How to contribute to the LNUG website",
    "speaker": "iancrowther",
    "body": "The LNUG websiet is undergoing a major overhaul.  @iancrowther & @simonmcmanus would like to give an architectual overview, onboard people and highlight the roadmap\n",
    "date": null
  },
  {
    "title": "How to contribute to the node webwg ",
    "speaker": "iancrowther",
    "body": "I want to share my insights on how the Node website is built and how you can get involved.  I will also outline how LNUG is built and what lessons we have learnt over the last 12 months.\n",
    "date": null
  },
  {
    "title": "Scaling Node.js using Docker",
    "speaker": "BenHall",
    "body": "With great load comes great scaling responsibility. If we need to scale then hopefully it means we're doing something right. The problem is how to scale without increasing complexity and re-writing the application.\n\nIn this talk, Ben will discuss how he scales Katacoda.com, an online learning platform for developers. Ben will show how to deploy Node.js applications with Docker. Once deployed, Ben will highlight how to scale the processes and take advantage of container based deployments.\n",
    "date": "2015-11-25"
  },
  {
    "title": "Going cross-platform with React: ~1 codebase, 3 platforms",
    "speaker": "HugoDF",
    "body": "What's the fastest way to ship a Web, iOS and Android app?\n\nReact Native goes beyond making native apps with web technology. You use javascript (granted that's a web technology) to make a fully fledged React app, using native components.\n\nIt's more than leveraging the power of the (state) => (UI) mapping of React. It's about code reuse. Being this DRY hurts. All the high-level logic is portable and you have **one** single codebase for all three target platforms. \n\nAll of this is free, as long as you embrace React.\n",
    "date": "2016-01-27"
  },
  {
    "title": "A javascript to c++ transpiler!",
    "speaker": "fabiosantoscode",
    "body": "A talk about an in-development javascript to c++ transpiler which currently kind of works and implements closures, numbers, objects, functions and strings.\n\nWatch it compile and run hello world, and beat node in an EPIC FIB() BENCHMARK!\n\nBe compelled by the power of tern.js to figure out what you think you're actually writing!\n",
    "date": "2015-11-25"
  },
  {
    "title": "Flux to Redux, Thinking with Data",
    "speaker": "bananaoomarang",
    "body": "Flux is one of the newer cool kids on the block, but it has it's fair share of problems. With all of the different implementations fighting for recognition, to first time users and abusers it can seem overly complicated.\n\nRedux is one Flux framework which has gained a lot of traction recently, thanks to its novel take on the architecture (vastly simpler than Facebooks sample implementation, for instance) and neat debugging features.\n\nThis talk can show the differences between Redux's approach and more 'traditional' Flux architectures, running over its benefits for developers. It will also briefly explain the difference between Flux applications and other MVC implementations, for anyone curious and unfamiliar.\n",
    "date": "2015-10-28"
  },
  {
    "title": "Graph databases - A holy crap moment!",
    "speaker": "adrianblynch",
    "body": "I don't often get blindsided by a new technology but investigating graph databases for a problem I'm trying to solve lately made me exclaim \"Holy crap!\"\n\nWhen you're stuck in a relational world you find ways to make everything fit. We've all learnt the lesson that other types of databases are better suited for certain problems, be it document store, key-value or column based. Graph databases on the other hand have been on the peripheral for me and no doubt many others. Even after reading Seven Databases in Seven Weeks, I still didn't quite get the point of graph DBs.\n\nSince looking into them, I now see that they could well nail down a lot of problems we all encounter and I think I'd like to talk about what we're using OrientDB for and highlight the potential they have in future development. \n",
    "date": null
  },
  {
    "title": "Full-stack BDD and its side effects",
    "speaker": "alistairstead",
    "body": "This is not yet another how do you do BDD in JavaScript talk. This is a talk about how you can apply widespread software design practices such as Design Patterns, BDD, TDD, DDD and SOLID to full-stack development. Less how to use these practices, more how to select and use them effectively.\n\nJust using these tools on their own can lead to unnecessary complexity that can be hard to understand or avoid. So let’s set aside discussions of the language syntax or capabilities and focus on what is important - delivering value to the customer.\n\nThis presentation will show how BDD practices can be applied to the different contexts of developing features through a multi-layer stack whilst smoothing the communication, providing detailed direction and showing the value for business owners and developers alike. The result is a feature that meets the business owner’s expectations with happy side effects such as the code being clean, well designed, understandable, fully tested and documented.\n",
    "date": "2015-10-28"
  },
  {
    "title": "White water streams",
    "speaker": "tomgco",
    "body": "We use streams on a daily basis when handling data with our Node.js applications, but how do they work, and more importantly, how do we keep them efficient and performant?\n\nThis talk focus mainly on analysing applications that utilises streaming data, identifying bottlenecks and making improvements. Be wow’ed by Flame{graphs,charts}, awed by benchmarks and take away some tips in writing decent stream implementations.\n",
    "date": "2015-10-28"
  },
  {
    "title": "Libraries.io beta",
    "speaker": "simonmcmanus",
    "body": "Description: \n\n```\nAlmost everyone uses and depends on open source software libraries these days, especially with the rise in popularity of NPM, but with nearly 200,000 libraries, how do you know which ones are worth using?\n\nIn this talk, Andrew Nesbitt will outline his solution to this problem with Libraries.io, which attempts to index all the world's open source software libraries and provide helpful ways of exploring the data and finding the best libraries for you to depend upon in your projects.\n\nSome of the topics we'll touch on include: \n\n- What makes a good library\n- How to make your open source libraries more user friendly\n- Dependency management with npm, bower and more \n- Exploring open source big data to find hidden gems\n```\n",
    "date": null
  },
  {
    "title": "The Miracle of Generators",
    "speaker": "bodil",
    "body": "The ECMAScript 2015 specification introduced _iterators_, which generalise iteration over common data structures, as well as providing an interface for allowing you to iterate over any custom data structures using common language constructs. ES2015 also introduced _generator functions_, which make writing arbitrary iterators a lot easier and less boilerplatey.\n\nBut generators aren't just for making simple iterators over data structures. Because they're bidirectional—they don't only produce output, they can also take input—they're actually _coroutines_, which means there's no end to the sort of fun you can apply them to. We're going to explore how we can use them to make asynchronous programming in JavaScript a lot more elegant—to chart a path out of callback hell. And then we're going to take a look at what we've really discovered: one of the most fearsome mysteries of computer science, suddenly laid bare before us.\n",
    "date": "2015-09-22"
  },
  {
    "title": "2FA, WTF?",
    "speaker": "philnash",
    "body": "Everyone is hacking everything. Everything is vulnerable. Your site, your users, even you. Are you worried about this? You should be!\n\nDon't worry, I'm not trying to scare you (that much). We have plenty of safeguards against attempts on our applications' user data. We all (hopefully) recognise Two Factor Auth as one of those safeguards, but what actually goes on under the hood of 2FA?\n\nWe'll take a look into generating one time passwords in JavaScript, implementing 2FA in Node.js applications and the only real life compelling use case for QR codes. Together, we'll make the web a more secure place.\n",
    "date": "2016-01-27"
  },
  {
    "title": "Load-testing for fun and profit",
    "speaker": "hassy",
    "body": "This talk will (briefly) outline why load-testing should be a part of your testing activities and then dive into an overview of tooling and strategies & processes to get the most out of it when working on a production system. We'll also explore how load-testing can improve our understanding of both our own code and components that our code depends on.\n",
    "date": "2015-09-22"
  },
  {
    "title": "MVP Diagrams that can do things",
    "speaker": "forbesmyester",
    "body": "A short talk on DB DiaYAML, which is a journey-to-work and weekend project for drawing simple database diagrams. It's not particularly a serious project but it scratches an itch I had and has a nice MVP feel to it. There's a blog post about it at http://keyboardwritescode.blogspot.co.uk/2015/07/weekend-project-db-diayaml.html \n",
    "date": "2015-11-25"
  },
  {
    "title": "Rethinking backend with webtasks",
    "speaker": "tjanczuk",
    "body": "You are writing a mobile or HTML5 web application that needs just a little bit of a backend. Maybe you want to access MongoDB, send an SMS, or an e-mail. Do you really need to host your own Node.js service to run this small snippet of backend logic?\n\nIn this talk I will take a hard look at the role of the backend in modern applications. I will introduce the concept of a [webtask](https://webtask.io) - a lightweight representation of backend logic that can safely be embedded in a client application. I will show how you can use modern container technologies based on CoreOS and Docker to build a generic, multi-tenant runtime for securely executing webtasks directly from a mobile or HTML5 application. You don’t need a backend to run backend code.\n\nThis talk is based on lessons learned when building the Node.js sandboxing technology for internal use in our core operations at Auth0.\n\nFind out more:\n[Webtask concepts](http://tomasz.janczuk.org/2015/04/rethinking-backend-with-webtasks.html)\n[Webtask CLI](https://github.com/auth0/wt-cli)\n[Webtask playground](https://webtask.io)\n[Webtask technology](https://medium.com/aws-activate-startup-blog/sandboxing-code-in-the-era-of-containers-294edb3a674)\n",
    "date": null
  },
  {
    "title": "How Waffle.io separated its API from its core web app",
    "speaker": "burtonjc",
    "body": "At Waffle.io, we recently built a public API to gain access to Waffle's data (in private beta now). We knew we wanted the API to be deployed, scaled, and monitored separately from our core app. We also wanted the app to use the same API we were providing to our users. Carving the API out as its own service consumed by our app provided some interesting challenges and produced some surprising benefits. This talk will describe the design we came up with, the challenges we faced, and the largely unexpected benefits we received.\n",
    "date": "2015-09-22"
  },
  {
    "title": "Joe Nash - Tokenization",
    "speaker": "iancrowther",
    "body": "Description to follow\n",
    "date": null
  },
  {
    "title": "Mikeal Rogers - Node Foundation Q&A",
    "speaker": "iancrowther",
    "body": "The following form needs distributing:\n\nhttps://docs.google.com/forms/d/1XvqIY3OroqUaxQPlfIc1VsCKzsbg1VbzbXrD4IHlx3w/viewform\n",
    "date": null
  },
  {
    "title": "July Speakers",
    "speaker": "iancrowther",
    "body": "- Founders & Coders?\n- Joe Nash?\n",
    "date": null
  },
  {
    "title": "WebRTC Reborn",
    "speaker": "danjenkins",
    "body": "WebRTC has had a real tough 3 or 4 years, and so have those working with it. Only a few short years ago, the development world were excited about WebRTC and proclaiming how awesome it was. \n\nYou might have played with the technology a couple of years ago, only to find the extra infrastructure requirements were painful to implement and poorly documented. This probably left a bitter taste in your mouth, especially when things went wrong.\n\nThose in the industry have been working hard to sweeten the deal again - efforts have been made to bring WebRTC into the mainstream and as a result the technology is experiencing a rebirth. Thanks to those who have remained dedicated to improving the situation for those around them, WebRTC is finally starting to fulfil the original expectations that were had of it. Both the technology and the support networks have been built up to make experimenting with it again a pleasure, not a pain.\n\nWebRTC has grown up; in this talk you will learn how far along the tech has come, its current capabilities, the amazing things that people are starting to do with it, and how simple getting started with the new toolsets available.\n",
    "date": null
  },
  {
    "title": "Founders & Coders",
    "speaker": "izaakrogan",
    "body": "Founders & Coders are a non-profit organisation, run with the objective of providing a first class training in full-stack JS, for free.\n\nIn this talk we will discuss the origins of Founders & Coders; why we started and our original goals. We will then talk about the last 18 months; how the organisation has developed and how our curriculum has shifted dramatically as we have experimented with different educational models. We will then talk briefly about the future of F&C; what we have planned and where we think our organisation is going.\n",
    "date": null
  },
  {
    "title": "TypeScript will finally bring peace to your troubled soul",
    "speaker": "pimterry",
    "body": "You've heard of TypeScript, but you're not sure if it's a good idea, and you've never really seen it in action. TypeScript is powerful though, rapidly gaining momentum, and has a lot more to offer than just JS + classes. Let's take a proper look.\n\nIn this talk, we'll dig a bit deeper and play around with some of the more interesting features TypeScript gives you. We'll walk through the extras that TypeScript provides and how they'll solve your every woe, learn a bit about where the types come in and why you care, and see how exactly you might put it into action on your next Node project.\n",
    "date": null
  },
  {
    "title": "Blowing out the LAMP",
    "speaker": "hxoliverrumbelow",
    "body": "Holiday Extras, a times top 100 company, maintains a big online presence selling airport parking, travel insurance and overnight stays in hotels. We made over 4,000,000 bookings last year and our API serves around 35 requests/second - we aren't big big, but we're big enough to have to deal with 'big website' problems.\n\nWe've spent 3 years fully migrating our production traffic away from a 10 year old LAMP stack to a NodeJS API. I want to share our journey - the migration plan, the evolution of our NodeJS codebase from beginning to end, our biggest mistakes and our biggest victories.\n",
    "date": null
  },
  {
    "title": "Production browser-side npm",
    "speaker": "mikemaccana",
    "body": "Everything you need to take advantage of npm in your browser side code, and avoid the pitfalls! \n\nIncluding:\n- Building browser bundles with gulp and npm build -  and how they compare\n- How to identify the modules that contribute to bundle file size\n- Pros, cons and workarounds for the izs style 'no lib dir, everything is a module' coding style\n- Ensuring consistent versioning during deploys\n- How to include templates in your browserify bundles\n\nBased on experiences in a real world, production, profitable application. \n",
    "date": null
  },
  {
    "title": "OpenComponents as microservices in the front-end world",
    "speaker": "matteofigus",
    "body": "Writing front-end code today is very challenging when you have to be resilient and robust in a big corporation. Working on a website that involves dozens of engineers based in three different continents, I learned that the complexity lies not only within the code itself. Allowing people to develop new features and deploy the code multiple times a day, keeping it up and running, is hard to achieve: we want small teams to be independent and not to interfere each other, in order to be quick and happy, but we also want to optimise cooperation when it is needed.\n\nIn the front-end world components are very small units of code providing application functionality that are all connected in order to become a web-site.\n\nDuring this talk I’m going to speak about how we tried to approach to components at OpenTable. After breaking our monolithic back-end into smaller parts, we tried to break the front-end into smaller parts too, called micro-sites. Then, following the SOA principles, we tried to elevate components as services, in order to make engineers able to create and consume them via clear and well-defined contracts and interfaces. This allowed us to put in place the infrastructure to optimise testing and to have hundreds of changes live every day without conflicts. The result is OpenComponents, a framework that we recently open-sourced.\n\nReferences:\nhttp://tech.opentable.co.uk/blog/2015/02/09/dismantling-the-monolith-microsites-at-opentable/\nhttps://github.com/opentable/oc\n",
    "date": null
  },
  {
    "title": "Liwe, an open source remote control for WebApps",
    "speaker": "maxwellito",
    "body": "This is a project I've been working on for few months and I just released it on [github.com/liwe](https://github.com/liwe) (under MIT). It's a service to let web developers (frontend guys) to use smartphones as remote for their webapps. Of course it's built with NodeJS. But at the moment it look more like a prototype than a robust piece of code.\n\nIt won't be very techy, especially in front of NodeJS developers. The talk would be axed on two main points:\n- Make a technology accessible to other developers. Like sockets (think about jQuery and PHP devs)\n- Find contributors\n\nI have absolutely no idea if this talk respect the idea of LNUG. I think I can hold 20 minutes demo included.\n\nhttps://github.com/liwe\nhttp://liwe.co\n",
    "date": null
  },
  {
    "title": "Guvnor: running your processes like a boss",
    "speaker": "achingbrain",
    "body": "[Guvnor](https://www.npmjs.com/package/guvnor) is a fully featured, multi user process manager for node.js/io.js that leans heavily on the Unix permissions model for security.  It's also got a neat web interface that monitors multiple hosts, reports live statistics about your application and lets you interact with it - debugging, monitoring resource usage, live logs, restarting, etc.\n\nThe talk will cover why the world needs another process manager, CLI usage, deploying apps from git repositories, cluster management, using the web interface and live coding a small app that uses the programmatic interface.\n",
    "date": null
  },
  {
    "title": "The state of web asset pipelines and the description of a new pipeline that combines the best of all worlds.",
    "speaker": "insidewhy",
    "body": "People soon realised that a task runner is not an asset pipeline, maybe sometime after the millionth spaghetti gruntfile was written. Along came gulp, the wonderful streaming pipeline, but the people saw that it was flawed, being built around `1:1` operations (disallowing nice n:1 stuff such as concatenation of streams together with their source maps).\n\nThen came plumber, broccoli, gobble, and metalsmith, all with unique selling points yet all having drawbacks not found in grunt and/or gulp.\n\nIt was time for a new asset pipeline to be born out of the pain of trying to find the holy grail of asset pipelines. It was time to write it using functional reactive programming, ES6 and a geekgasm of buzz-words to seduce the JavaScript community. It was time for a bullshit sensationalised lnug talk abstract. Yes, it's time to sigh. [sighjs](https://github.com/sighjs/sigh).\n\nIn this talk I will describe the issues with existing asset pipelines (read: trash all the competition) and describe how sighjs improves upon the state of the art (read: gloriously inflate my ego).\n\nThis talk will last around 10 minutes long and it will be a little surreal. Here is [one of my other talks at HNN](https://vimeo.com/31535266j).\n",
    "date": null
  },
  {
    "title": "Writing and publishing ES6 code today",
    "speaker": "jamesallardice",
    "body": "On February 20th the first release candidate of the 6th edition of the ECMAScript specification (ECMAScript 2015 as it is now officially known) was released. The language is rapidly stabilising and the new features are slowly but surely making their way into the existing JavaScript engines. Unfortunately, it will still be a while before we're able to write ES6 code and have it run natively in either browsers or Node and io.js. Thankfully TC39 (the group responsible for the development of the ECMAScript specification) put a lot of effort into ensuring backwards compatibility so it is possible to use a large and growing proportion of ES6 today.\n\nThis talk will look into some of the technologies and techniques that can be used to write, publish and deploy ES6 code today, without having to wait until the engines catch up. We'll explore source-to-source compilation, standard library polyfills, publishing modules written in ES6 to npm and the consumption of those modules by existing ES5 and new ES6 code.\n",
    "date": null
  },
  {
    "title": "Progressive Enhancement Strategies",
    "speaker": "simonmcmanus",
    "body": "Advances in JavaScript are changing the way that we think about the web; it's no longer just a platform for information, but for complex interactions too.\n\nAs we race into the future, we risk losing some of the things that make the web so special.\n\nIn this talk I will outline why I believe progressive enhancement is still important. Demonstrating processes, techniques and architectures which provide the benefits without introducing an overhead. \n",
    "date": null
  },
  {
    "title": "Server mocking with canned",
    "speaker": "sideshowcoder",
    "body": "I've been frustrated with the complexity involved with just setting up a mock server so I wrote [canned](https://github.com/sideshowcoder/canned) sometime ago making faking a webserver just a matter of putting files in folders. This simple approach led to a whole bunch of usecase from \n- frontend development first, backend later\n- mock server for testing\n- performance testing for mobile apps without backend influence\n\nI think some of this would make an interesting talk and maybe some people might even find a use for canned in their own work. \n",
    "date": null
  },
  {
    "title": "Benefits of using Convention over Configuration",
    "speaker": "Globegitter",
    "body": "Node/io.js and npm is now the most flourishing ecosystem with over 200 npm modules being published a day*. While this poses a lot of opportunities for us to work together and build better software, it also comes with problems we as developers have to face: Which package should I now choose? How do I use it in my app? What input does it expect? etc. Making a multitude of these simple decision drains a lot of our energy - more than you might even think initially. Imagine now `npm install` and you are ready to go. You installed your addon, you already know what to expect and it hooks itself up into your app.\n\nThis is the philosophy behind convention-over-configuration: having a standard we all work with to automate mundane decisions. So we can focus on making our software better.\n\n*Source: http://www.modulecounts.com/\n",
    "date": null
  },
  {
    "title": "Flo Servers are dead, long live the service",
    "speaker": "flomotlik",
    "body": "Short intro why the days of the server are numbered as our most basic building block and building on top of services is the future.\n",
    "date": "2015-01-28"
  },
  {
    "title": "neil test talk",
    "speaker": "iancrowther",
    "body": "hackday\n",
    "date": null
  },
  {
    "title": "Ross Kukulinski - What to expect when expecting IOJS",
    "speaker": "rosskukulinski",
    "body": "Hello!\n\nI'm a co-organizer of BayNode and internet friends with @orliesaurus and @iancrowther. We've been kicking around the idea of sharing pre-recorded talks.\n\nI'm going to be doing a ~20 minute talk at BayNode next week on the 1.0.0 release of [iojs](https://iojs.org/).  The talk will be recorded and I can send over the video, alternatively, I could live-stream the talk for y'all.\n\nOverview:\n- Why fork node?\n- What new/broken IOJS 1.0.0\n- Node/IOJS Compatibility\n- Should I be scared / Should I deploy it?\n- My take on what the future holds for the node community\n",
    "date": "2015-01-28"
  },
  {
    "title": "Building NodeJS Applications with Docker & CoreOS",
    "speaker": "rosskukulinski",
    "body": "Hello!\n\nI'm a co-organizer of [BayNode](http://www.meetup.com/BayNode/) and internet friends with @orliesaurus and @iancrowther.  We've been kicking around the idea of sharing pre-recorded talks.\n\nI'm proposing to do a (revised) screencast of a talk I did at BayNode in November.  Slides for that talk can be found [here](http://www.slideshare.net/kuxman/bay-node-dockernodejscoreos)\n",
    "date": null
  },
  {
    "title": "Francisco Ferreira - Javascript Craftsmanship",
    "speaker": "fmsf",
    "body": "Avoid stepping into the rabbit hole with common anti-patterns and bad code. With a strong emphasis on how JavaScript code can be done beautiful and maintainable, this talk explains how to write very readable and testable code. At eBay we love to have our code clean, so we’ll use some examples of eBay’s code during this presentation.\n\nWe’ll touch topics on how functional can intersect with object oriented programming to decrease the learning curve to your code. Or how choosing the correct data structures is more important than ever to guarantee optimal performance. \n\nAll of this in a framework agnostic way, so that it is easy to take home and apply to your projects with ease. \n\nHopefully after you have attended this talk you will code cleaner.\n\nTopics covered:\n\nCode readability\nFunctional JS\nObject Oriented JS\nUnit Testing\nCode structuring\n",
    "date": "2015-01-28"
  },
  {
    "title": "Super simple service health monitoring with upmon",
    "speaker": "alanshaw",
    "body": "A talk about this thing I built called [upmon](https://github.com/alanshaw/upmon). It's essentially a description of what it is and how to use it and how using node streams is a great way to create modular and compose-able software.\n",
    "date": null
  },
  {
    "title": "setup milestones",
    "speaker": "iancrowther",
    "body": "",
    "date": null
  },
  {
    "title": "Everything you didn't dare asking about jade",
    "speaker": "ForbesLindesay",
    "body": "This talk will start with a very brief overview of what the jade templating language is and why it's so powerful.  It will then deep dive into how the nitty gritty of the compiler is implemented, this will include some discussion of the many other modules that jade depends on.  I will then take the audience on a tour of a couple of my favourite spinoffs of jade.  Finally, I will end with a description of how we have built a community around the jade project that is capable of achieving far more than I could on my own.\n\nAny thoughts on this are welcome.  I think it would be a relatively long talk, maybe 1 hour.\n",
    "date": "2015-02-25"
  },
  {
    "title": "Rod Petrovic - November 26th - Autoscaling Node on EC2",
    "speaker": "rodp",
    "body": "TVBeat is receiving real time data from multiple pay-TV platforms. For that purpose, I developed a simple ingestion API in Node that scales up and down automatically across EC2 micro instances. The talk would be an overview of how this was done and the main considerations.\n",
    "date": null
  },
  {
    "title": "Dan Sofer - Nov 26th - Lightning talk: the new coding school in Mile End",
    "speaker": "sofer",
    "body": "For the past year, Founders & Coders has been a project at Camden Collective, but the funding has run out and we are setting up a CIC, doing a Kickstarter and moving our free, peer-led, Node-based bootcamp to Mile End. This will be a quick summary of the model and a progress update. \n",
    "date": null
  },
  {
    "title": "Service discovery for your Node.js applications",
    "speaker": "lukebond",
    "body": "A talk about service discovery in the context of Node.js. How to build services that talk to each other automatically and respond to changing IP address and ports.\n\nThe talk will be practical and technical, and focus on using Etcd as well as @pgte's Skiff Raft implementation. I may decide to do only the latter.\n\nI plan to have an audience participation section at the end. Something along the lines of \"clone this repo and run it to discover each other's services and participate in solving some problem\".\n",
    "date": "2015-02-25"
  },
  {
    "title": "I'm a Node Module Maintainer (And so can you!)",
    "speaker": "basicallydan",
    "body": "This is an idea for a fairly simple sort of tutorial on creating, releasing, maintaining, versioning, getting input for, etc, etc an open-source node module. Including:\n- Some good practices when versioning, releasing, and documenting your open-source code\n- Some NPM tips\n- How to make your code inclusive\n- Some GitHub tips\n\nJust to show that I have at least some of the experience necessary for this, I currently am actively maintaining two packages and I've put a couple of others onto NPM: https://www.npmjs.org/~basicallydan and I've picked up a few things along the way.\n\nIf this sounds like it's too simple for LNUG, please let me know - I've only been to one event so far, and it seems to me like there's a fairly wide variety of experience levels at the usergroup so I'm sure some people would benefit.\n\nThoughts?\n\nPreferred Month: February 2015\n",
    "date": "2015-02-25"
  },
  {
    "title": "Tim Perry - Web Components & Microservices Are The Same Thing",
    "speaker": "pimterry",
    "body": "I've got a talk put together on web components, microservices, and the shared principles behind both of them (complete with node-based example). Does that sound like a good fit for LNUG?\n\nNot sure how long your talks typically are; this is about 30 minutes, but that's a bit tight, so a 35/40 minute slot would be great if that's possible. It looks like the October & November slots are already pretty full, but January 28th would work for me.\n",
    "date": "2015-01-28"
  },
  {
    "title": "Jakub Racek - January 28th - Live programming Pipes and Streams",
    "speaker": "ghost",
    "body": "Description will come\n",
    "date": null
  },
  {
    "title": "Tom Cartwright - November 26th - Peer connect all the things",
    "speaker": "iancrowther",
    "body": "",
    "date": null
  },
  {
    "title": "Francisco Ferreira - September 24th - JavaScript, Java and Dart! Asynch all around us.",
    "speaker": "iancrowther",
    "body": "",
    "date": null
  },
  {
    "title": "Ben Hall - October 22nd - Node Anti-patterns",
    "speaker": "iancrowther",
    "body": "",
    "date": null
  },
  {
    "title": "Philipp Fehre - October 22nd - JSON throughout the Stack",
    "speaker": "iancrowther",
    "body": "",
    "date": null
  },
  {
    "title": "Jakub - September 24th - Scanner and Printer Pi with Node sides",
    "speaker": "iancrowther",
    "body": "Company: Pact\n",
    "date": null
  },
  {
    "title": "George Ornbo - November 26th - Realtime Node.js from the trenches",
    "speaker": "shapeshed",
    "body": "For about two years I've been using realtime Node.js in production. The talk covers the story of this experience from early days of socket.io and RedisStore to Primus and engine.io. It covers scaling from a single process to running a clustered service with resilience.\n\nThrough running in production the application has experienced many things around persistent connections including working with cloud services, configuring Linux servers correctly, mobile devices and which message queues work well.\n\nThe talk shares my experience of using many of Node's realtime libraries, running a product critical service, and ultimately asking the question 'Is Node A Good Choice for Realtime?'\n\nI can talk at the September meetup but due to childcare commitments would be the new year before I can do the talk. \n",
    "date": null
  },
  {
    "title": "Title : JavaScript, Java and Dart! Asynch all around us.",
    "speaker": "fmsf",
    "body": "To fix callback readability and facilitate event oriented programming, we have seen promises and futures emerge in multiple programming languages. \n- Dart takes this very seriously by having futures built in by default.\n- Java also applies `Futures` and `CompletableFutures` that get attributed and completed in isolation under separate threads.\n- JS defers into promises to fix pyramid of doom anti-pattern and to facilitate working with events under a single thread system.\n\nThis talk shows a bird's eye view on how these three languages apply promises. Adding focus to how the usage of promises and futures influences coding styles and architectural decisions.\n\nTopics covered:\n- Quick JS `Promises/A+` overview\n- Reference to Dart `Futures`\n- Reference to Java `Futures` and Java8 `CompletableFuture`\n- How promises tend to use the Monad design pattern (examples in JS)\n- Why unit testing is even more important when working with promises (examples in JS)\n- Using promises to abstract from synch/asynch behavior, and be more reactive.\n",
    "date": null
  },
  {
    "title": "Tom Gallacher - November 26th - \"Async: the battle\"",
    "speaker": "tomgco",
    "body": "Something really awesome, with some nice examples and a simple outcome ;]\n",
    "date": null
  },
  {
    "title": "Offline Apps and Data Synchronization",
    "speaker": "forbesmyester",
    "body": "Hi LNUG,\n\nI would be very interested in doing a talk.\n\nI have been working on a project for many months, which is an attempt to make it easier to develop apps (web or phonegap) that can work offline but also Synchronize data back up to the server when an Internet connection becomes available. This is a pretty difficult problem to solve, particularly in a way which is not tied to any particular application logic.\n\nThe guts of the project is basically an asynchronous versioning LocalStorage written in vanilla JavaScript so it is super portable and reusable ( see https://github.com/forbesmyester/SyncIt ).\n\nI have also started other projects that are loosely coupled to SyncIt for the server component and a network monitoring / communication of changes. See https://github.com/forbesmyester/SyncItControl and https://github.com/forbesmyester/syncit-server.\n\nThere is of course always more to do, but it is now feature complete and has a base project ( https://github.com/forbesmyester/SyncItBootstrap ) so it is easy to get an App started. There is even a TodoMVC example ( https://github.com/forbesmyester/SyncItBootstrap/tree/todomvc / http://teud.eu )... The blocks at the top are the synchronization status.\n\nIt is all Open Source and I am basically now transitioning from development to trying to get the word out about it as I think it could be really useful for lots of people. Doing a talk at LNUG would be an amazing start to my promotion efforts.\n\nI would talk about:\n- The reasons it is a non trivial problem, such as network latency and being offline.\n- Trying to keep it as a library and not coupled to jQuery or nearly anything else.\n- Why it is essential to have a form of version control for detecting conflicts.\n- The choice to trigger the app developers handler for conflicts instead of trying to write a universal one.\n- Lastly I would talk about the loosely coupled but complementary projects such as the server and communication control component.\n- A demo, or perhaps a few throughout to aid visualisation of what is happening...\n\nYou can contact me as @forbesmyester on Twitter or through the email on my GitHub account.\n\nThanks\n\nMatt Forrester\n",
    "date": null
  }
]
